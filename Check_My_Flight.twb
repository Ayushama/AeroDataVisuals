<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.24.0424.0800                               -->
<workbook original-version='18.1' source-build='2023.2.8 (20232.24.0424.0800)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='itineraries' inline='true' name='federated.0p4f7a314fsfg21ar9fk41b04wy8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='itineraries' name='textscan.1ahmels03qxpjs1h6462e1iqumn8'>
            <connection class='textscan' directory='D:/Data Analyst/tableau' filename='itineraries.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1ahmels03qxpjs1h6462e1iqumn8' name='itineraries.csv' table='[itineraries#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='legId' ordinal='0' />
            <column datatype='date' name='searchDate' ordinal='1' />
            <column datatype='date' name='flightDate' ordinal='2' />
            <column datatype='string' name='startingAirport' ordinal='3' />
            <column datatype='string' name='destinationAirport' ordinal='4' />
            <column datatype='string' name='fareBasisCode' ordinal='5' />
            <column datatype='string' name='travelDuration' ordinal='6' />
            <column datatype='integer' name='elapsedDays' ordinal='7' />
            <column datatype='boolean' name='isBasicEconomy' ordinal='8' />
            <column datatype='boolean' name='isRefundable' ordinal='9' />
            <column datatype='boolean' name='isNonStop' ordinal='10' />
            <column datatype='real' name='baseFare' ordinal='11' />
            <column datatype='real' name='totalFare' ordinal='12' />
            <column datatype='integer' name='seatsRemaining' ordinal='13' />
            <column datatype='integer' name='totalTravelDistance' ordinal='14' />
            <column datatype='string' name='segmentsDepartureTimeEpochSeconds' ordinal='15' />
            <column datatype='string' name='segmentsDepartureTimeRaw' ordinal='16' />
            <column datatype='string' name='segmentsArrivalTimeEpochSeconds' ordinal='17' />
            <column datatype='string' name='segmentsArrivalTimeRaw' ordinal='18' />
            <column datatype='string' name='segmentsArrivalAirportCode' ordinal='19' />
            <column datatype='string' name='segmentsDepartureAirportCode' ordinal='20' />
            <column datatype='string' name='segmentsAirlineName' ordinal='21' />
            <column datatype='string' name='segmentsAirlineCode' ordinal='22' />
            <column datatype='string' name='segmentsEquipmentDescription' ordinal='23' />
            <column datatype='string' name='segmentsDurationInSeconds' ordinal='24' />
            <column datatype='string' name='segmentsDistance' ordinal='25' />
            <column datatype='string' name='segmentsCabinCode' ordinal='26' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1ahmels03qxpjs1h6462e1iqumn8' name='itineraries.csv' table='[itineraries#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='legId' ordinal='0' />
            <column datatype='date' name='searchDate' ordinal='1' />
            <column datatype='date' name='flightDate' ordinal='2' />
            <column datatype='string' name='startingAirport' ordinal='3' />
            <column datatype='string' name='destinationAirport' ordinal='4' />
            <column datatype='string' name='fareBasisCode' ordinal='5' />
            <column datatype='string' name='travelDuration' ordinal='6' />
            <column datatype='integer' name='elapsedDays' ordinal='7' />
            <column datatype='boolean' name='isBasicEconomy' ordinal='8' />
            <column datatype='boolean' name='isRefundable' ordinal='9' />
            <column datatype='boolean' name='isNonStop' ordinal='10' />
            <column datatype='real' name='baseFare' ordinal='11' />
            <column datatype='real' name='totalFare' ordinal='12' />
            <column datatype='integer' name='seatsRemaining' ordinal='13' />
            <column datatype='integer' name='totalTravelDistance' ordinal='14' />
            <column datatype='string' name='segmentsDepartureTimeEpochSeconds' ordinal='15' />
            <column datatype='string' name='segmentsDepartureTimeRaw' ordinal='16' />
            <column datatype='string' name='segmentsArrivalTimeEpochSeconds' ordinal='17' />
            <column datatype='string' name='segmentsArrivalTimeRaw' ordinal='18' />
            <column datatype='string' name='segmentsArrivalAirportCode' ordinal='19' />
            <column datatype='string' name='segmentsDepartureAirportCode' ordinal='20' />
            <column datatype='string' name='segmentsAirlineName' ordinal='21' />
            <column datatype='string' name='segmentsAirlineCode' ordinal='22' />
            <column datatype='string' name='segmentsEquipmentDescription' ordinal='23' />
            <column datatype='string' name='segmentsDurationInSeconds' ordinal='24' />
            <column datatype='string' name='segmentsDistance' ordinal='25' />
            <column datatype='string' name='segmentsCabinCode' ordinal='26' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[itineraries.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>legId</remote-name>
            <remote-type>129</remote-type>
            <local-name>[legId]</local-name>
            <parent-name>[itineraries.csv]</parent-name>
            <remote-alias>legId</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[itineraries.csv_93E425EBF6084E0897D4A33194FDAC43]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>searchDate</remote-name>
            <remote-type>133</remote-type>
            <local-name>[searchDate]</local-name>
            <parent-name>[itineraries.csv]</parent-name>
            <remote-alias>searchDate</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[itineraries.csv_93E425EBF6084E0897D4A33194FDAC43]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flightDate</remote-name>
            <remote-type>133</remote-type>
            <local-name>[flightDate]</local-name>
            <parent-name>[itineraries.csv]</parent-name>
            <remote-alias>flightDate</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[itineraries.csv_93E425EBF6084E0897D4A33194FDAC43]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>startingAirport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[startingAirport]</local-name>
            <parent-name>[itineraries.csv]</parent-name>
            <remote-alias>startingAirport</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[itineraries.csv_93E425EBF6084E0897D4A33194FDAC43]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destinationAirport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[destinationAirport]</local-name>
            <parent-name>[itineraries.csv]</parent-name>
            <remote-alias>destinationAirport</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[itineraries.csv_93E425EBF6084E0897D4A33194FDAC43]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fareBasisCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[fareBasisCode]</local-name>
            <parent-name>[itineraries.csv]</parent-name>
            <remote-alias>fareBasisCode</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[itineraries.csv_93E425EBF6084E0897D4A33194FDAC43]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>travelDuration</remote-name>
            <remote-type>129</remote-type>
            <local-name>[travelDuration]</local-name>
            <parent-name>[itineraries.csv]</parent-name>
            <remote-alias>travelDuration</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[itineraries.csv_93E425EBF6084E0897D4A33194FDAC43]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>elapsedDays</remote-name>
            <remote-type>20</remote-type>
            <local-name>[elapsedDays]</local-name>
            <parent-name>[itineraries.csv]</parent-name>
            <remote-alias>elapsedDays</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[itineraries.csv_93E425EBF6084E0897D4A33194FDAC43]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>isBasicEconomy</remote-name>
            <remote-type>11</remote-type>
            <local-name>[isBasicEconomy]</local-name>
            <parent-name>[itineraries.csv]</parent-name>
            <remote-alias>isBasicEconomy</remote-alias>
            <ordinal>8</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[itineraries.csv_93E425EBF6084E0897D4A33194FDAC43]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>isRefundable</remote-name>
            <remote-type>11</remote-type>
            <local-name>[isRefundable]</local-name>
            <parent-name>[itineraries.csv]</parent-name>
            <remote-alias>isRefundable</remote-alias>
            <ordinal>9</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[itineraries.csv_93E425EBF6084E0897D4A33194FDAC43]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>isNonStop</remote-name>
            <remote-type>11</remote-type>
            <local-name>[isNonStop]</local-name>
            <parent-name>[itineraries.csv]</parent-name>
            <remote-alias>isNonStop</remote-alias>
            <ordinal>10</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[itineraries.csv_93E425EBF6084E0897D4A33194FDAC43]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>baseFare</remote-name>
            <remote-type>5</remote-type>
            <local-name>[baseFare]</local-name>
            <parent-name>[itineraries.csv]</parent-name>
            <remote-alias>baseFare</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[itineraries.csv_93E425EBF6084E0897D4A33194FDAC43]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>totalFare</remote-name>
            <remote-type>5</remote-type>
            <local-name>[totalFare]</local-name>
            <parent-name>[itineraries.csv]</parent-name>
            <remote-alias>totalFare</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[itineraries.csv_93E425EBF6084E0897D4A33194FDAC43]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seatsRemaining</remote-name>
            <remote-type>20</remote-type>
            <local-name>[seatsRemaining]</local-name>
            <parent-name>[itineraries.csv]</parent-name>
            <remote-alias>seatsRemaining</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[itineraries.csv_93E425EBF6084E0897D4A33194FDAC43]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>totalTravelDistance</remote-name>
            <remote-type>20</remote-type>
            <local-name>[totalTravelDistance]</local-name>
            <parent-name>[itineraries.csv]</parent-name>
            <remote-alias>totalTravelDistance</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[itineraries.csv_93E425EBF6084E0897D4A33194FDAC43]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>segmentsDepartureTimeEpochSeconds</remote-name>
            <remote-type>129</remote-type>
            <local-name>[segmentsDepartureTimeEpochSeconds]</local-name>
            <parent-name>[itineraries.csv]</parent-name>
            <remote-alias>segmentsDepartureTimeEpochSeconds</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[itineraries.csv_93E425EBF6084E0897D4A33194FDAC43]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>segmentsDepartureTimeRaw</remote-name>
            <remote-type>129</remote-type>
            <local-name>[segmentsDepartureTimeRaw]</local-name>
            <parent-name>[itineraries.csv]</parent-name>
            <remote-alias>segmentsDepartureTimeRaw</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[itineraries.csv_93E425EBF6084E0897D4A33194FDAC43]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>segmentsArrivalTimeEpochSeconds</remote-name>
            <remote-type>129</remote-type>
            <local-name>[segmentsArrivalTimeEpochSeconds]</local-name>
            <parent-name>[itineraries.csv]</parent-name>
            <remote-alias>segmentsArrivalTimeEpochSeconds</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[itineraries.csv_93E425EBF6084E0897D4A33194FDAC43]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>segmentsArrivalTimeRaw</remote-name>
            <remote-type>129</remote-type>
            <local-name>[segmentsArrivalTimeRaw]</local-name>
            <parent-name>[itineraries.csv]</parent-name>
            <remote-alias>segmentsArrivalTimeRaw</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[itineraries.csv_93E425EBF6084E0897D4A33194FDAC43]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>segmentsArrivalAirportCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[segmentsArrivalAirportCode]</local-name>
            <parent-name>[itineraries.csv]</parent-name>
            <remote-alias>segmentsArrivalAirportCode</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[itineraries.csv_93E425EBF6084E0897D4A33194FDAC43]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>segmentsDepartureAirportCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[segmentsDepartureAirportCode]</local-name>
            <parent-name>[itineraries.csv]</parent-name>
            <remote-alias>segmentsDepartureAirportCode</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[itineraries.csv_93E425EBF6084E0897D4A33194FDAC43]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>segmentsAirlineName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[segmentsAirlineName]</local-name>
            <parent-name>[itineraries.csv]</parent-name>
            <remote-alias>segmentsAirlineName</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[itineraries.csv_93E425EBF6084E0897D4A33194FDAC43]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>segmentsAirlineCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[segmentsAirlineCode]</local-name>
            <parent-name>[itineraries.csv]</parent-name>
            <remote-alias>segmentsAirlineCode</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[itineraries.csv_93E425EBF6084E0897D4A33194FDAC43]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>segmentsEquipmentDescription</remote-name>
            <remote-type>129</remote-type>
            <local-name>[segmentsEquipmentDescription]</local-name>
            <parent-name>[itineraries.csv]</parent-name>
            <remote-alias>segmentsEquipmentDescription</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[itineraries.csv_93E425EBF6084E0897D4A33194FDAC43]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>segmentsDurationInSeconds</remote-name>
            <remote-type>129</remote-type>
            <local-name>[segmentsDurationInSeconds]</local-name>
            <parent-name>[itineraries.csv]</parent-name>
            <remote-alias>segmentsDurationInSeconds</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[itineraries.csv_93E425EBF6084E0897D4A33194FDAC43]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>segmentsDistance</remote-name>
            <remote-type>129</remote-type>
            <local-name>[segmentsDistance]</local-name>
            <parent-name>[itineraries.csv]</parent-name>
            <remote-alias>segmentsDistance</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[itineraries.csv_93E425EBF6084E0897D4A33194FDAC43]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>segmentsCabinCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[segmentsCabinCode]</local-name>
            <parent-name>[itineraries.csv]</parent-name>
            <remote-alias>segmentsCabinCode</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[itineraries.csv_93E425EBF6084E0897D4A33194FDAC43]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='itineraries.csv' datatype='table' name='[__tableau_internal_object_id__].[itineraries.csv_93E425EBF6084E0897D4A33194FDAC43]' role='measure' type='quantitative' />
      <column caption='Base Fare' datatype='real' name='[baseFare]' role='measure' type='quantitative' />
      <column caption='Destination Airport' datatype='string' name='[destinationAirport]' role='dimension' type='nominal' />
      <column caption='Elapsed Days' datatype='integer' name='[elapsedDays]' role='measure' type='quantitative' />
      <column caption='Fare Basis Code' datatype='string' name='[fareBasisCode]' role='dimension' type='nominal' />
      <column caption='Flight Date' datatype='date' name='[flightDate]' role='dimension' type='ordinal' />
      <column caption='Is Basic Economy' datatype='boolean' name='[isBasicEconomy]' role='dimension' type='nominal' />
      <column caption='Is Non Stop' datatype='boolean' name='[isNonStop]' role='dimension' type='nominal' />
      <column caption='Is Refundable' datatype='boolean' name='[isRefundable]' role='dimension' type='nominal' />
      <column caption='Leg Id' datatype='string' name='[legId]' role='dimension' type='nominal' />
      <column caption='Search Date' datatype='date' name='[searchDate]' role='dimension' type='ordinal' />
      <column caption='Seats Remaining' datatype='integer' name='[seatsRemaining]' role='measure' type='quantitative' />
      <column caption='Segments Airline Code' datatype='string' name='[segmentsAirlineCode]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='Segments Airline Name' datatype='string' name='[segmentsAirlineName]' role='dimension' type='nominal' />
      <column caption='Segments Arrival Airport Code' datatype='string' name='[segmentsArrivalAirportCode]' role='dimension' type='nominal' />
      <column caption='Segments Arrival Time Epoch Seconds' datatype='string' name='[segmentsArrivalTimeEpochSeconds]' role='dimension' type='nominal' />
      <column caption='Segments Arrival Time Raw' datatype='string' name='[segmentsArrivalTimeRaw]' role='dimension' type='nominal' />
      <column caption='Segments Cabin Code' datatype='string' name='[segmentsCabinCode]' role='dimension' type='nominal' />
      <column caption='Segments Departure Airport Code' datatype='string' name='[segmentsDepartureAirportCode]' role='dimension' type='nominal' />
      <column caption='Segments Departure Time Epoch Seconds' datatype='string' name='[segmentsDepartureTimeEpochSeconds]' role='dimension' type='nominal' />
      <column caption='Segments Departure Time Raw' datatype='string' name='[segmentsDepartureTimeRaw]' role='dimension' type='nominal' />
      <column caption='Segments Distance' datatype='string' name='[segmentsDistance]' role='dimension' type='nominal' />
      <column caption='Segments Duration In Seconds' datatype='string' name='[segmentsDurationInSeconds]' role='dimension' type='nominal' />
      <column caption='Segments Equipment Description' datatype='string' name='[segmentsEquipmentDescription]' role='dimension' type='nominal' />
      <column caption='Starting Airport' datatype='string' name='[startingAirport]' role='dimension' type='nominal' />
      <column caption='Total Fare' datatype='real' name='[totalFare]' role='measure' type='quantitative' />
      <column caption='Total Travel Distance' datatype='integer' name='[totalTravelDistance]' role='measure' type='quantitative' />
      <column caption='Travel Duration' datatype='string' name='[travelDuration]' role='dimension' type='nominal' />
      <column-instance column='[totalFare]' derivation='Avg' name='[avg:totalFare:qk]' pivot='key' type='quantitative' />
      <column-instance column='[flightDate]' derivation='Day' name='[dy:flightDate:ok]' pivot='key' type='ordinal' />
      <column-instance column='[startingAirport]' derivation='Max' name='[max:startingAirport:nk]' pivot='key' type='nominal' />
      <column-instance column='[totalFare]' derivation='Median' name='[med:totalFare:qk]' pivot='key' type='quantitative' />
      <column-instance column='[flightDate]' derivation='Month' name='[mn:flightDate:ok]' pivot='key' type='ordinal' />
      <column-instance column='[destinationAirport]' derivation='None' name='[none:destinationAirport:nk]' pivot='key' type='nominal' />
      <column-instance column='[segmentsAirlineName]' derivation='None' name='[none:segmentsAirlineName:nk]' pivot='key' type='nominal' />
      <column-instance column='[segmentsCabinCode]' derivation='None' name='[none:segmentsCabinCode:nk]' pivot='key' type='nominal' />
      <column-instance column='[startingAirport]' derivation='None' name='[none:startingAirport:nk]' pivot='key' type='nominal' />
      <column-instance column='[totalFare]' derivation='Avg' name='[pcto:avg:totalFare:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[totalFare]' derivation='Sum' name='[pcto:sum:totalFare:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[flightDate]' derivation='Quarter' name='[qr:flightDate:ok]' pivot='key' type='ordinal' />
      <column-instance column='[baseFare]' derivation='Sum' name='[sum:baseFare:qk]' pivot='key' type='quantitative' />
      <column-instance column='[totalFare]' derivation='Sum' name='[sum:totalFare:qk]' pivot='key' type='quantitative' />
      <column-instance column='[flightDate]' derivation='Day-Trunc' name='[tdy:flightDate:ok]' pivot='key' type='ordinal' />
      <column-instance column='[flightDate]' derivation='Year' name='[yr:flightDate:ok]' pivot='key' type='ordinal' />
      <group caption='Action (DAY(Flight Date))' hidden='true' name='[Action (DAY(Flight Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tdy:flightDate:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Destination Airport,Starting Airport)' hidden='true' name='[Action (Destination Airport,Starting Airport)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[destinationAirport]' />
          <groupfilter function='level-members' level='[startingAirport]' />
        </groupfilter>
      </group>
      <group caption='Action (Is Refundable,Segments Airline Name,Travel Duration)' hidden='true' name='[Action (Is Refundable,Segments Airline Name,Travel Duration)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[isRefundable]' />
          <groupfilter function='level-members' level='[segmentsAirlineName]' />
          <groupfilter function='level-members' level='[travelDuration]' />
        </groupfilter>
      </group>
      <group caption='Action (Segments Airline Name)' hidden='true' name='[Action (Segments Airline Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[segmentsAirlineName]' />
        </groupfilter>
      </group>
      <group caption='Action (Segments Airline Name,Travel Duration)' hidden='true' name='[Action (Segments Airline Name,Travel Duration)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[segmentsAirlineName]' />
          <groupfilter function='level-members' level='[travelDuration]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Flight Date),QUARTER(Flight Date),MONTH(Flight Date),DAY(Flight Date))' hidden='true' name='[Action (YEAR(Flight Date),QUARTER(Flight Date),MONTH(Flight Date),DAY(Flight Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:flightDate:ok]' />
          <groupfilter function='level-members' level='[qr:flightDate:ok]' />
          <groupfilter function='level-members' level='[mn:flightDate:ok]' />
          <groupfilter function='level-members' level='[dy:flightDate:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Flight Date),QUARTER(Flight Date),MONTH(Flight Date),DAY(Flight Date),Is Non Stop)' hidden='true' name='[Action (YEAR(Flight Date),QUARTER(Flight Date),MONTH(Flight Date),DAY(Flight Date),Is Non Stop)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:flightDate:ok]' />
          <groupfilter function='level-members' level='[qr:flightDate:ok]' />
          <groupfilter function='level-members' level='[mn:flightDate:ok]' />
          <groupfilter function='level-members' level='[dy:flightDate:ok]' />
          <groupfilter function='level-members' level='[isNonStop]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:destinationAirport:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;JFK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ATL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DFW&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;OAK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LAX&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DTW&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BOS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;EWR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ORD&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PHL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LGA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;IAD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CLT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SFO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MIA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DEN&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[max:startingAirport:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;JFK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ATL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DFW&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;OAK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LAX&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DTW&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BOS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;EWR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ORD&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PHL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LGA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;IAD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CLT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SFO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MIA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DEN&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:startingAirport:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;JFK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ATL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DFW&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;OAK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LAX&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DTW&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BOS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;EWR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ORD&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PHL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LGA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;IAD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CLT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SFO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MIA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DEN&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[mn:flightDate:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>4</bucket>
            </map>
            <map to='#e15759'>
              <bucket>6</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>5</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:segmentsCabinCode:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;coach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;first||first&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;business&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;coach||first&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;business||coach||business&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;coach||premium coach||coach&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;coach||coach&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;premium coach||business||coach&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;coach||business&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;first||first||coach&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;business||coach||coach&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;first&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;coach||coach||first||coach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;business||business&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;coach||first||coach&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;coach||coach||coach||premium coach&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;premium coach||premium coach||coach&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;business||first&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;first||coach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;coach||coach||business&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;premium coach||coach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;coach||coach||coach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;premium coach||coach||coach&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;coach||coach||first&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;coach||coach||premium coach&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;coach||business||business&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;first||first||first&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;business||first||first&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;first||coach||coach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;business||business||coach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;coach||first||first&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;coach||coach||coach||coach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;premium coach||premium coach&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;coach||business||coach&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;premium coach&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;business||coach&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;coach||premium coach&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0p4f7a314fsfg21ar9fk41b04wy8].[sum:baseFare:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0p4f7a314fsfg21ar9fk41b04wy8].[avg:totalFare:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0p4f7a314fsfg21ar9fk41b04wy8].[med:totalFare:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0p4f7a314fsfg21ar9fk41b04wy8].[pcto:avg:totalFare:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0p4f7a314fsfg21ar9fk41b04wy8].[pcto:sum:totalFare:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0p4f7a314fsfg21ar9fk41b04wy8].[sum:totalFare:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:segmentsAirlineName:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Alaska Airlines||United||Alaska Airlines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cape Air||Cape Air||American Airlines||American Airlines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Delta||Delta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Key Lime Air||Key Lime Air||American Airlines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United||Key Lime Air||Key Lime Air&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alaska Airlines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;American Airlines||Key Lime Air||Key Lime Air&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Delta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frontier Airlines||Frontier Airlines||Frontier Airlines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United||Alaska Airlines||United&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alaska Airlines||Alaska Airlines||United&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cape Air||Cape Air&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Delta||Alaska Airlines||United&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;JetBlue Airways||JetBlue Airways&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United||Cape Air||Cape Air||Delta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;American Airlines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cape Air||Cape Air||Cape Air||United&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Delta||Delta||United||United&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Spirit Airlines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United||United||Alaska Airlines||Alaska Airlines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alaska Airlines||United||Delta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cape Air||Cape Air||Cape Air&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Delta||Delta||Alaska Airlines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Key Lime Air||Key Lime Air||United&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United||Southern Airways Express||Southern Airways Express&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alaska Airlines||Delta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cape Air||Cape Air||Alaska Airlines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Delta||Cape Air||Cape Air||Cape Air&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;JetBlue Airways||JetBlue Airways||Cape Air&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United||Cape Air||Cape Air||United&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;American Airlines||Cape Air||Cape Air||American Airlines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Air||JetBlue Airways||JetBlue Airways&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Frontier Airlines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United||Alaska Airlines||Alaska Airlines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alaska Airlines||Alaska Airlines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;American Airlines||Southern Airways Express||Southern Airways Express&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Delta||Alaska Airlines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JetBlue Airways&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United||Boutique Air||Boutique Air&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;American Airlines||Boutique Air||Boutique Air&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Air||Cape Air||United||United&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Delta||United||United&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United||United||United||Delta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Alaska Airlines||Delta||Delta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cape Air||Cape Air||Alaska Airlines||Alaska Airlines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Delta||Cape Air||Cape Air||Delta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JetBlue Airways||JetBlue Airways||JetBlue Airways&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United||Delta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;American Airlines||American Airlines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cape Air||Cape Air||Delta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Delta||United&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Spirit Airlines||Spirit Airlines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United||United||Delta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;American Airlines||American Airlines||American Airlines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cape Air||Cape Air||Delta||Delta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Delta||United||Alaska Airlines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spirit Airlines||Spirit Airlines||Spirit Airlines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United||United||Delta||Delta&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;American Airlines||Cape Air||Cape Air&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cape Air||JetBlue Airways&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Delta||United||United||Alaska Airlines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United||Alaska Airlines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United||United||United||United&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;American Airlines||Contour Airlines||Contour Airlines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Contour Airlines||Contour Airlines||American Airlines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Frontier Airlines||Frontier Airlines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United||Alaska Airlines||Delta&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alaska Airlines||United||United&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cape Air||Cape Air||Cape Air||Delta&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Delta||Delta||Delta&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Southern Airways Express||Southern Airways Express||American Airlines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United||United&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alaska Airlines||United&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cape Air||Cape Air||American Airlines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Delta||Cape Air||Cape Air||United&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Key Lime Air||Key Lime Air&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United||Delta||Delta&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alaska Airlines||Alaska Airlines||Alaska Airlines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boutique Air||Boutique Air||American Airlines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Delta||Alaska Airlines||Alaska Airlines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;JetBlue Airways||Cape Air||Cape Air&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United||Cape Air||Cape Air||Alaska Airlines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;American Airlines||American Airlines||Cape Air||Cape Air&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cape Air||Cape Air||JetBlue Airways&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Delta||United||Delta&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sun Country Airlines||Sun Country Airlines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United||United||United&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alaska Airlines||United||United||United&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cape Air||Cape Air||Cape Air||JetBlue Airways&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Delta||Delta||United&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Southern Airways Express||Southern Airways Express||United&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United||United||Alaska Airlines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alaska Airlines||Alaska Airlines||Delta&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boutique Air||Boutique Air||United&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Delta||Alaska Airlines||Delta&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;JetBlue Airways||Cape Air||JetBlue Airways&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United||Cape Air||Cape Air||Cape Air&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='itineraries.csv' id='itineraries.csv_93E425EBF6084E0897D4A33194FDAC43'>
            <properties context=''>
              <relation connection='textscan.1ahmels03qxpjs1h6462e1iqumn8' name='itineraries.csv' table='[itineraries#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='legId' ordinal='0' />
                  <column datatype='date' name='searchDate' ordinal='1' />
                  <column datatype='date' name='flightDate' ordinal='2' />
                  <column datatype='string' name='startingAirport' ordinal='3' />
                  <column datatype='string' name='destinationAirport' ordinal='4' />
                  <column datatype='string' name='fareBasisCode' ordinal='5' />
                  <column datatype='string' name='travelDuration' ordinal='6' />
                  <column datatype='integer' name='elapsedDays' ordinal='7' />
                  <column datatype='boolean' name='isBasicEconomy' ordinal='8' />
                  <column datatype='boolean' name='isRefundable' ordinal='9' />
                  <column datatype='boolean' name='isNonStop' ordinal='10' />
                  <column datatype='real' name='baseFare' ordinal='11' />
                  <column datatype='real' name='totalFare' ordinal='12' />
                  <column datatype='integer' name='seatsRemaining' ordinal='13' />
                  <column datatype='integer' name='totalTravelDistance' ordinal='14' />
                  <column datatype='string' name='segmentsDepartureTimeEpochSeconds' ordinal='15' />
                  <column datatype='string' name='segmentsDepartureTimeRaw' ordinal='16' />
                  <column datatype='string' name='segmentsArrivalTimeEpochSeconds' ordinal='17' />
                  <column datatype='string' name='segmentsArrivalTimeRaw' ordinal='18' />
                  <column datatype='string' name='segmentsArrivalAirportCode' ordinal='19' />
                  <column datatype='string' name='segmentsDepartureAirportCode' ordinal='20' />
                  <column datatype='string' name='segmentsAirlineName' ordinal='21' />
                  <column datatype='string' name='segmentsAirlineCode' ordinal='22' />
                  <column datatype='string' name='segmentsEquipmentDescription' ordinal='23' />
                  <column datatype='string' name='segmentsDurationInSeconds' ordinal='24' />
                  <column datatype='string' name='segmentsDistance' ordinal='25' />
                  <column datatype='string' name='segmentsCabinCode' ordinal='26' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 10 (generated)' name='[Action10_A86B51565D4E45EC8D9AE8EA2A2C5E66]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Route Analysis and Flight Characteristics' type='sheet' worksheet='Travel_Distance_by_Start_Airport' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Route Analysis and Flight Characteristics' />
      </command>
    </action>
    <action caption='Filter 11 (generated)' name='[Action11_F26DC64359FF45B1A59B25957D7FA079]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Route Analysis and Flight Characteristics' type='sheet' worksheet='Avg_vs_Total_Travel_Distance' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Route Analysis and Flight Characteristics' />
      </command>
    </action>
    <action caption='Filter 12 (generated)' name='[Action12_4167A8A8D1F547859D54025861D06AED]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Route Analysis and Flight Characteristics' type='sheet' worksheet='NonStop_vs_Connecting_Flights' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Route Analysis and Flight Characteristics' />
      </command>
    </action>
    <action caption='Filter 13 (generated)' name='[Action13_EB746DE8AA83472AAE904E43CB0A666A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Route Analysis and Flight Characteristics' type='sheet' worksheet='Fares_by_Start_and_Destination' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Route Analysis and Flight Characteristics' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action1_672D2E9B399545699EB5BA498F327C91]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Flight Trends and Pricing Analysis' type='sheet' worksheet='Total_Fares_vs_Travel_Duration' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Flight Trends and Pricing Analysis' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_C2A48019F3C34BEC8DA5B9D8662C7A53]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Flight Trends and Pricing Analysis' type='sheet' worksheet='Refundable_vs_NonRefundable_Fares' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Flight Trends and Pricing Analysis' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_ED1B2998C18841E789DD3272DAF77671]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Flight Trends and Pricing Analysis' type='sheet' worksheet='Fare_Distribution_by_Airline' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Flight Trends and Pricing Analysis' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_249F5535DE0D4EC4B98F3DE9C4D751F7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Flight Trends and Pricing Analysis' type='sheet' worksheet='Flight_Price_Trend' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Flight Trends and Pricing Analysis' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_CF0BDDCAC5CB407B9DEB1F549089A24B]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Flight Trends and Pricing Analysis' type='sheet' worksheet='Base_vs_Total_Fare_Over_Time' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Flight Trends and Pricing Analysis' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_B384B279E84240E197F7012E734023F0]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Travel Distance and Airport Analysis' type='sheet' worksheet='Cabin_Class_Distribution' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Travel Distance and Airport Analysis' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7_3E9572313E634676B434887F0637DC32]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Travel Distance and Airport Analysis' type='sheet' worksheet='Travel_Distance_by_Start_Airport' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Travel Distance and Airport Analysis' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action8_8E222D17DC3B4CCF81B452568A6E16A3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Travel Distance and Airport Analysis' type='sheet' worksheet='Fares_by_Start_and_Destination' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Travel Distance and Airport Analysis' />
      </command>
    </action>
    <action caption='Filter 9 (generated)' name='[Action9_FA30372D90334131A383D2E6521C2056]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Travel Distance and Airport Analysis' type='sheet' worksheet='NonStop_vs_Connecting_Flights' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Travel Distance and Airport Analysis' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Avg_vs_Total_Travel_Distance'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Calibri' fontsize='14'>Comparison of Average vs. Total Travel Distance</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='itineraries' name='federated.0p4f7a314fsfg21ar9fk41b04wy8' />
          </datasources>
          <datasource-dependencies datasource='federated.0p4f7a314fsfg21ar9fk41b04wy8'>
            <column-instance column='[totalTravelDistance]' derivation='Avg' name='[avg:totalTravelDistance:qk]' pivot='key' type='quantitative' />
            <column caption='Destination Airport' datatype='string' name='[destinationAirport]' role='dimension' type='nominal' />
            <column-instance column='[flightDate]' derivation='Day' name='[dy:flightDate:ok]' pivot='key' type='ordinal' />
            <column caption='Flight Date' datatype='date' name='[flightDate]' role='dimension' type='ordinal' />
            <column caption='Is Non Stop' datatype='boolean' name='[isNonStop]' role='dimension' type='nominal' />
            <column-instance column='[totalTravelDistance]' derivation='Max' name='[max:totalTravelDistance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flightDate]' derivation='Month' name='[mn:flightDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[segmentsAirlineName]' derivation='None' name='[none:segmentsAirlineName:nk]' pivot='key' type='nominal' />
            <column-instance column='[startingAirport]' derivation='None' name='[none:startingAirport:nk]' pivot='key' type='nominal' />
            <column-instance column='[flightDate]' derivation='Quarter' name='[qr:flightDate:ok]' pivot='key' type='ordinal' />
            <column aggregation='CountD' caption='Segments Airline Name' datatype='string' name='[segmentsAirlineName]' role='dimension' type='nominal' />
            <column caption='Starting Airport' datatype='string' name='[startingAirport]' role='dimension' type='nominal' />
            <column-instance column='[totalTravelDistance]' derivation='Sum' name='[sum:totalTravelDistance:qk]' pivot='key' type='quantitative' />
            <column caption='Total Travel Distance' datatype='integer' name='[totalTravelDistance]' role='measure' type='quantitative' />
            <column-instance column='[flightDate]' derivation='Year' name='[yr:flightDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (Destination Airport,Starting Airport)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8_8E222D17DC3B4CCF81B452568A6E16A3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[destinationAirport]' />
              <groupfilter function='level-members' level='[startingAirport]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (YEAR(Flight Date),QUARTER(Flight Date),MONTH(Flight Date),DAY(Flight Date),Is Non Stop)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action9_FA30372D90334131A383D2E6521C2056]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:flightDate:ok]' />
              <groupfilter function='level-members' level='[qr:flightDate:ok]' />
              <groupfilter function='level-members' level='[mn:flightDate:ok]' />
              <groupfilter function='level-members' level='[dy:flightDate:ok]' />
              <groupfilter function='level-members' level='[isNonStop]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[avg:totalTravelDistance:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[avg:totalTravelDistance:qk]</column>
            <column>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (YEAR(Flight Date),QUARTER(Flight Date),MONTH(Flight Date),DAY(Flight Date),Is Non Stop)]</column>
            <column>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (Destination Airport,Starting Airport)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:startingAirport:nk]' />
              <lod column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:segmentsAirlineName:nk]' />
              <lod column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[max:totalTravelDistance:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[sum:totalTravelDistance:qk]</rows>
        <cols>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[avg:totalTravelDistance:qk]</cols>
      </table>
      <simple-id uuid='{31CA0B6A-5359-4C0E-8949-88C91856FBC0}' />
    </worksheet>
    <worksheet name='Base_vs_Total_Fare_Over_Time'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Calibri' fontsize='14'>Base Fare and Total Fare Over Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='itineraries' name='federated.0p4f7a314fsfg21ar9fk41b04wy8' />
          </datasources>
          <datasource-dependencies datasource='federated.0p4f7a314fsfg21ar9fk41b04wy8'>
            <column caption='Base Fare' datatype='real' name='[baseFare]' role='measure' type='quantitative' />
            <column-instance column='[flightDate]' derivation='Day' name='[dy:flightDate:ok]' pivot='key' type='ordinal' />
            <column caption='Flight Date' datatype='date' name='[flightDate]' role='dimension' type='ordinal' />
            <column caption='Is Refundable' datatype='boolean' name='[isRefundable]' role='dimension' type='nominal' />
            <column-instance column='[flightDate]' derivation='Month' name='[mn:flightDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[flightDate]' derivation='Quarter' name='[qr:flightDate:ok]' pivot='key' type='ordinal' />
            <column aggregation='CountD' caption='Segments Airline Name' datatype='string' name='[segmentsAirlineName]' role='dimension' type='nominal' />
            <column-instance column='[baseFare]' derivation='Sum' name='[sum:baseFare:qk]' pivot='key' type='quantitative' />
            <column-instance column='[totalFare]' derivation='Sum' name='[sum:totalFare:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flightDate]' derivation='Day-Trunc' name='[tdy:flightDate:qk]' pivot='key' type='quantitative' />
            <column caption='Total Fare' datatype='real' name='[totalFare]' role='measure' type='quantitative' />
            <column caption='Travel Duration' datatype='string' name='[travelDuration]' role='dimension' type='nominal' />
            <column-instance column='[flightDate]' derivation='Year' name='[yr:flightDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (Is Refundable,Segments Airline Name,Travel Duration)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_C2A48019F3C34BEC8DA5B9D8662C7A53]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[isRefundable]' />
              <groupfilter function='level-members' level='[segmentsAirlineName]' />
              <groupfilter function='level-members' level='[travelDuration]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (Segments Airline Name)]'>
            <groupfilter function='level-members' level='[segmentsAirlineName]' user:ui-action-filter='[Action3_ED1B2998C18841E789DD3272DAF77671]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (Segments Airline Name,Travel Duration)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_672D2E9B399545699EB5BA498F327C91]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[segmentsAirlineName]' />
              <groupfilter function='level-members' level='[travelDuration]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (YEAR(Flight Date),QUARTER(Flight Date),MONTH(Flight Date),DAY(Flight Date))]'>
            <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action4_249F5535DE0D4EC4B98F3DE9C4D751F7]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[qr:flightDate:ok]' member='2' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[yr:flightDate:ok]' member='2022' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[mn:flightDate:ok]' member='4' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='17' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='18' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='19' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='20' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='21' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='22' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='23' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='24' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='25' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='26' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='27' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='28' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='29' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='30' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[mn:flightDate:ok]' member='5' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='1' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='2' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='3' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='4' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='5' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='6' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='7' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='10' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='11' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='12' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='14' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='15' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='16' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='17' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='18' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='19' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='20' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='21' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='22' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='24' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='25' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='26' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='27' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='28' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='30' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='31' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[mn:flightDate:ok]' member='6' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='1' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='2' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='3' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='4' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='5' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='6' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='7' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='8' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='9' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='10' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='11' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='12' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='13' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='14' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='15' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='16' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[yr:flightDate:ok]' />
                <hierarchy name='[qr:flightDate:ok]' />
                <hierarchy name='[mn:flightDate:ok]' />
                <hierarchy name='[dy:flightDate:ok]' />
              </order>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (Is Refundable,Segments Airline Name,Travel Duration)]</column>
            <column>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (YEAR(Flight Date),QUARTER(Flight Date),MONTH(Flight Date),DAY(Flight Date))]</column>
            <column>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (Segments Airline Name)]</column>
            <column>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (Segments Airline Name,Travel Duration)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[sum:totalFare:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='auto' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[sum:baseFare:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[sum:totalFare:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0p4f7a314fsfg21ar9fk41b04wy8].[sum:baseFare:qk] + [federated.0p4f7a314fsfg21ar9fk41b04wy8].[sum:totalFare:qk])</rows>
        <cols>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[tdy:flightDate:qk]</cols>
      </table>
      <simple-id uuid='{1A251385-A99C-4BE3-9465-FBC20DDFD950}' />
    </worksheet>
    <worksheet name='Cabin_Class_Distribution'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Calibri' fontsize='14'>Distribution of Cabin Classes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='itineraries' name='federated.0p4f7a314fsfg21ar9fk41b04wy8' />
          </datasources>
          <datasource-dependencies datasource='federated.0p4f7a314fsfg21ar9fk41b04wy8'>
            <column-instance column='[totalFare]' derivation='Avg' name='[avg:totalFare:qk]' pivot='key' type='quantitative' />
            <column caption='Destination Airport' datatype='string' name='[destinationAirport]' role='dimension' type='nominal' />
            <column-instance column='[flightDate]' derivation='Day' name='[dy:flightDate:ok]' pivot='key' type='ordinal' />
            <column caption='Flight Date' datatype='date' name='[flightDate]' role='dimension' type='ordinal' />
            <column caption='Is Non Stop' datatype='boolean' name='[isNonStop]' role='dimension' type='nominal' />
            <column-instance column='[flightDate]' derivation='Month' name='[mn:flightDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[segmentsCabinCode]' derivation='None' name='[none:segmentsCabinCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[totalFare]' derivation='Avg' name='[pcto:avg:totalFare:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[flightDate]' derivation='Quarter' name='[qr:flightDate:ok]' pivot='key' type='ordinal' />
            <column caption='Segments Cabin Code' datatype='string' name='[segmentsCabinCode]' role='dimension' type='nominal' />
            <column caption='Starting Airport' datatype='string' name='[startingAirport]' role='dimension' type='nominal' />
            <column caption='Total Fare' datatype='real' name='[totalFare]' role='measure' type='quantitative' />
            <column-instance column='[flightDate]' derivation='Year' name='[yr:flightDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (Destination Airport,Starting Airport)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8_8E222D17DC3B4CCF81B452568A6E16A3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[destinationAirport]' />
              <groupfilter function='level-members' level='[startingAirport]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (YEAR(Flight Date),QUARTER(Flight Date),MONTH(Flight Date),DAY(Flight Date),Is Non Stop)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action9_FA30372D90334131A383D2E6521C2056]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:flightDate:ok]' />
              <groupfilter function='level-members' level='[qr:flightDate:ok]' />
              <groupfilter function='level-members' level='[mn:flightDate:ok]' />
              <groupfilter function='level-members' level='[dy:flightDate:ok]' />
              <groupfilter function='level-members' level='[isNonStop]' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:segmentsCabinCode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;business&quot;</bucket>
              <bucket>&quot;business||business&quot;</bucket>
              <bucket>&quot;business||business||coach&quot;</bucket>
              <bucket>&quot;business||coach&quot;</bucket>
              <bucket>&quot;business||coach||business&quot;</bucket>
              <bucket>&quot;business||coach||coach&quot;</bucket>
              <bucket>&quot;business||first&quot;</bucket>
              <bucket>&quot;business||first||first&quot;</bucket>
              <bucket>&quot;coach&quot;</bucket>
              <bucket>&quot;coach||business&quot;</bucket>
              <bucket>&quot;coach||business||business&quot;</bucket>
              <bucket>&quot;coach||business||coach&quot;</bucket>
              <bucket>&quot;coach||coach&quot;</bucket>
              <bucket>&quot;coach||coach||business&quot;</bucket>
              <bucket>&quot;coach||coach||coach&quot;</bucket>
              <bucket>&quot;coach||coach||coach||coach&quot;</bucket>
              <bucket>&quot;coach||coach||coach||premium coach&quot;</bucket>
              <bucket>&quot;coach||coach||first&quot;</bucket>
              <bucket>&quot;coach||coach||first||coach&quot;</bucket>
              <bucket>&quot;coach||coach||premium coach&quot;</bucket>
              <bucket>&quot;coach||first&quot;</bucket>
              <bucket>&quot;coach||first||coach&quot;</bucket>
              <bucket>&quot;coach||first||first&quot;</bucket>
              <bucket>&quot;coach||premium coach&quot;</bucket>
              <bucket>&quot;coach||premium coach||coach&quot;</bucket>
              <bucket>&quot;first&quot;</bucket>
              <bucket>&quot;first||coach&quot;</bucket>
              <bucket>&quot;first||coach||coach&quot;</bucket>
              <bucket>&quot;first||first&quot;</bucket>
              <bucket>&quot;first||first||coach&quot;</bucket>
              <bucket>&quot;first||first||first&quot;</bucket>
              <bucket>&quot;premium coach&quot;</bucket>
              <bucket>&quot;premium coach||business||coach&quot;</bucket>
              <bucket>&quot;premium coach||coach&quot;</bucket>
              <bucket>&quot;premium coach||coach||coach&quot;</bucket>
              <bucket>&quot;premium coach||premium coach&quot;</bucket>
              <bucket>&quot;premium coach||premium coach||coach&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (YEAR(Flight Date),QUARTER(Flight Date),MONTH(Flight Date),DAY(Flight Date),Is Non Stop)]</column>
            <column>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (Destination Airport,Starting Airport)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:segmentsCabinCode:nk]' />
              <wedge-size column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[pcto:avg:totalFare:qk]' />
              <size column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[avg:totalFare:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3513259887695312' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{BB17FC67-996A-44C5-9322-B8E602314FCC}' />
    </worksheet>
    <worksheet name='Fare_Distribution_by_Airline'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Calibri' fontsize='14'>Fare Distribution by Airline</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='itineraries' name='federated.0p4f7a314fsfg21ar9fk41b04wy8' />
          </datasources>
          <datasource-dependencies datasource='federated.0p4f7a314fsfg21ar9fk41b04wy8'>
            <column-instance column='[segmentsAirlineName]' derivation='Max' name='[max:segmentsAirlineName:nk]' pivot='key' type='nominal' />
            <column-instance column='[segmentsAirlineName]' derivation='None' name='[none:segmentsAirlineName:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' caption='Segments Airline Name' datatype='string' name='[segmentsAirlineName]' role='dimension' type='nominal' />
            <column-instance column='[totalFare]' derivation='Sum' name='[sum:totalFare:qk]' pivot='key' type='quantitative' />
            <column caption='Total Fare' datatype='real' name='[totalFare]' role='measure' type='quantitative' />
            <column caption='Travel Duration' datatype='string' name='[travelDuration]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (Segments Airline Name,Travel Duration)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_672D2E9B399545699EB5BA498F327C91]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[segmentsAirlineName]' />
              <groupfilter function='level-members' level='[travelDuration]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (Segments Airline Name,Travel Duration)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[sum:totalFare:qk]' field-type='quantitative' max='59901380.589753509' min='-91283.508629999997' range-type='fixed' scope='rows' type='space' />
            <format attr='width' field='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[sum:totalFare:qk]' value='60' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:segmentsAirlineName:nk]' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[max:segmentsAirlineName:nk]' />
              <lod column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:segmentsAirlineName:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[sum:totalFare:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[sum:totalFare:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='line-interpolation' value='step' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[sum:totalFare:qk]</rows>
        <cols>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:segmentsAirlineName:nk]</cols>
      </table>
      <simple-id uuid='{5A41043F-E530-44CF-A893-83749526D775}' />
    </worksheet>
    <worksheet name='Fares_by_Start_and_Destination'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Calibri' fontsize='14'>Total Fares by Starting and Destination Airports</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='itineraries' name='federated.0p4f7a314fsfg21ar9fk41b04wy8' />
          </datasources>
          <datasource-dependencies datasource='federated.0p4f7a314fsfg21ar9fk41b04wy8'>
            <column-instance column='[totalFare]' derivation='Avg' name='[avg:totalFare:qk]' pivot='key' type='quantitative' />
            <column caption='Destination Airport' datatype='string' name='[destinationAirport]' role='dimension' type='nominal' />
            <column-instance column='[flightDate]' derivation='Day' name='[dy:flightDate:ok]' pivot='key' type='ordinal' />
            <column caption='Flight Date' datatype='date' name='[flightDate]' role='dimension' type='ordinal' />
            <column caption='Is Non Stop' datatype='boolean' name='[isNonStop]' role='dimension' type='nominal' />
            <column-instance column='[flightDate]' derivation='Month' name='[mn:flightDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[destinationAirport]' derivation='None' name='[none:destinationAirport:nk]' pivot='key' type='nominal' />
            <column-instance column='[startingAirport]' derivation='None' name='[none:startingAirport:nk]' pivot='key' type='nominal' />
            <column-instance column='[flightDate]' derivation='Quarter' name='[qr:flightDate:ok]' pivot='key' type='ordinal' />
            <column caption='Starting Airport' datatype='string' name='[startingAirport]' role='dimension' type='nominal' />
            <column caption='Total Fare' datatype='real' name='[totalFare]' role='measure' type='quantitative' />
            <column-instance column='[flightDate]' derivation='Year' name='[yr:flightDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (YEAR(Flight Date),QUARTER(Flight Date),MONTH(Flight Date),DAY(Flight Date),Is Non Stop)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action9_FA30372D90334131A383D2E6521C2056]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:flightDate:ok]' />
              <groupfilter function='level-members' level='[qr:flightDate:ok]' />
              <groupfilter function='level-members' level='[mn:flightDate:ok]' />
              <groupfilter function='level-members' level='[dy:flightDate:ok]' />
              <groupfilter function='level-members' level='[isNonStop]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (YEAR(Flight Date),QUARTER(Flight Date),MONTH(Flight Date),DAY(Flight Date),Is Non Stop)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:destinationAirport:nk]' value='100' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[avg:totalFare:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[avg:totalFare:qk]' />
              <lod column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[avg:totalFare:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:destinationAirport:nk]</rows>
        <cols>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:startingAirport:nk]</cols>
      </table>
      <simple-id uuid='{A08598AC-C9E9-4E23-99B5-678CF7BEE98E}' />
    </worksheet>
    <worksheet name='Flight_Price_Trend'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Calibri' fontsize='14'>Flight Price Trend Over Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='itineraries' name='federated.0p4f7a314fsfg21ar9fk41b04wy8' />
          </datasources>
          <datasource-dependencies datasource='federated.0p4f7a314fsfg21ar9fk41b04wy8'>
            <column-instance column='[flightDate]' derivation='Day' name='[dy:flightDate:ok]' pivot='key' type='ordinal' />
            <column caption='Flight Date' datatype='date' name='[flightDate]' role='dimension' type='ordinal' />
            <column caption='Is Refundable' datatype='boolean' name='[isRefundable]' role='dimension' type='nominal' />
            <column-instance column='[flightDate]' derivation='Month' name='[mn:flightDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[flightDate]' derivation='Quarter' name='[qr:flightDate:ok]' pivot='key' type='ordinal' />
            <column aggregation='CountD' caption='Segments Airline Name' datatype='string' name='[segmentsAirlineName]' role='dimension' type='nominal' />
            <column-instance column='[totalFare]' derivation='Sum' name='[sum:totalFare:qk]' pivot='key' type='quantitative' />
            <column caption='Total Fare' datatype='real' name='[totalFare]' role='measure' type='quantitative' />
            <column caption='Travel Duration' datatype='string' name='[travelDuration]' role='dimension' type='nominal' />
            <column-instance column='[flightDate]' derivation='Year' name='[yr:flightDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (Is Refundable,Segments Airline Name,Travel Duration)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_C2A48019F3C34BEC8DA5B9D8662C7A53]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[isRefundable]' />
              <groupfilter function='level-members' level='[segmentsAirlineName]' />
              <groupfilter function='level-members' level='[travelDuration]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (Segments Airline Name)]'>
            <groupfilter function='level-members' level='[segmentsAirlineName]' user:ui-action-filter='[Action3_ED1B2998C18841E789DD3272DAF77671]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (Segments Airline Name,Travel Duration)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_672D2E9B399545699EB5BA498F327C91]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[segmentsAirlineName]' />
              <groupfilter function='level-members' level='[travelDuration]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[yr:flightDate:ok]'>
            <groupfilter function='member' level='[yr:flightDate:ok]' member='2022' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (Is Refundable,Segments Airline Name,Travel Duration)]</column>
            <column>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[yr:flightDate:ok]</column>
            <column>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (Segments Airline Name)]</column>
            <column>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (Segments Airline Name,Travel Duration)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[sum:totalFare:qk]</rows>
        <cols>([federated.0p4f7a314fsfg21ar9fk41b04wy8].[yr:flightDate:ok] / ([federated.0p4f7a314fsfg21ar9fk41b04wy8].[qr:flightDate:ok] / ([federated.0p4f7a314fsfg21ar9fk41b04wy8].[mn:flightDate:ok] / [federated.0p4f7a314fsfg21ar9fk41b04wy8].[dy:flightDate:ok])))</cols>
      </table>
      <simple-id uuid='{6159D54E-6BF7-45D4-8A1D-C926F2A8F1FA}' />
    </worksheet>
    <worksheet name='NonStop_vs_Connecting_Flights'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Calibri' fontsize='14'>Non-Stop vs. Connecting Flights</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='itineraries' name='federated.0p4f7a314fsfg21ar9fk41b04wy8' />
          </datasources>
          <datasource-dependencies datasource='federated.0p4f7a314fsfg21ar9fk41b04wy8'>
            <column caption='Destination Airport' datatype='string' name='[destinationAirport]' role='dimension' type='nominal' />
            <column-instance column='[flightDate]' derivation='Day' name='[dy:flightDate:ok]' pivot='key' type='ordinal' />
            <column caption='Flight Date' datatype='date' name='[flightDate]' role='dimension' type='ordinal' />
            <column caption='Is Non Stop' datatype='boolean' name='[isNonStop]' role='dimension' type='nominal' />
            <column-instance column='[flightDate]' derivation='Month' name='[mn:flightDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[isNonStop]' derivation='None' name='[none:isNonStop:nk]' pivot='key' type='nominal' />
            <column-instance column='[flightDate]' derivation='Quarter' name='[qr:flightDate:ok]' pivot='key' type='ordinal' />
            <column caption='Starting Airport' datatype='string' name='[startingAirport]' role='dimension' type='nominal' />
            <column-instance column='[totalFare]' derivation='Sum' name='[sum:totalFare:qk]' pivot='key' type='quantitative' />
            <column caption='Total Fare' datatype='real' name='[totalFare]' role='measure' type='quantitative' />
            <column-instance column='[flightDate]' derivation='Year' name='[yr:flightDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (Destination Airport,Starting Airport)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8_8E222D17DC3B4CCF81B452568A6E16A3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[destinationAirport]' />
              <groupfilter function='level-members' level='[startingAirport]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[yr:flightDate:ok]'>
            <groupfilter function='member' level='[yr:flightDate:ok]' member='2022' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[yr:flightDate:ok]</column>
            <column>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (Destination Airport,Starting Airport)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[mn:flightDate:ok]' />
              <lod column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[dy:flightDate:ok]' />
              <lod column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:isNonStop:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[sum:totalFare:qk]</rows>
        <cols>([federated.0p4f7a314fsfg21ar9fk41b04wy8].[yr:flightDate:ok] / ([federated.0p4f7a314fsfg21ar9fk41b04wy8].[qr:flightDate:ok] / [federated.0p4f7a314fsfg21ar9fk41b04wy8].[dy:flightDate:ok]))</cols>
      </table>
      <simple-id uuid='{CD80884B-9E59-467E-BFA8-6F943B3E113B}' />
    </worksheet>
    <worksheet name='Refundable_vs_NonRefundable_Fares'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Calibri' fontsize='14'>Refundable vs. Non-Refundable Fares</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='itineraries' name='federated.0p4f7a314fsfg21ar9fk41b04wy8' />
          </datasources>
          <datasource-dependencies datasource='federated.0p4f7a314fsfg21ar9fk41b04wy8'>
            <column-instance column='[totalFare]' derivation='Avg' name='[avg:totalFare:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flightDate]' derivation='Day' name='[dy:flightDate:ok]' pivot='key' type='ordinal' />
            <column caption='Flight Date' datatype='date' name='[flightDate]' role='dimension' type='ordinal' />
            <column caption='Is Refundable' datatype='boolean' name='[isRefundable]' role='dimension' type='nominal' />
            <column-instance column='[flightDate]' derivation='Month' name='[mn:flightDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[isRefundable]' derivation='None' name='[none:isRefundable:nk]' pivot='key' type='nominal' />
            <column-instance column='[segmentsAirlineName]' derivation='None' name='[none:segmentsAirlineName:nk]' pivot='key' type='nominal' />
            <column-instance column='[travelDuration]' derivation='None' name='[none:travelDuration:nk]' pivot='key' type='nominal' />
            <column-instance column='[flightDate]' derivation='Quarter' name='[qr:flightDate:ok]' pivot='key' type='ordinal' />
            <column aggregation='CountD' caption='Segments Airline Name' datatype='string' name='[segmentsAirlineName]' role='dimension' type='nominal' />
            <column caption='Total Fare' datatype='real' name='[totalFare]' role='measure' type='quantitative' />
            <column caption='Travel Duration' datatype='string' name='[travelDuration]' role='dimension' type='nominal' />
            <column-instance column='[flightDate]' derivation='Year' name='[yr:flightDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (Segments Airline Name)]'>
            <groupfilter function='level-members' level='[segmentsAirlineName]' user:ui-action-filter='[Action3_ED1B2998C18841E789DD3272DAF77671]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (Segments Airline Name,Travel Duration)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_672D2E9B399545699EB5BA498F327C91]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[segmentsAirlineName]' />
              <groupfilter function='level-members' level='[travelDuration]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (YEAR(Flight Date),QUARTER(Flight Date),MONTH(Flight Date),DAY(Flight Date))]'>
            <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action4_249F5535DE0D4EC4B98F3DE9C4D751F7]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[qr:flightDate:ok]' member='2' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[yr:flightDate:ok]' member='2022' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[mn:flightDate:ok]' member='4' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='17' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='18' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='19' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='20' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='21' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='22' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='23' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='24' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='25' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='26' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='27' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='28' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='29' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='30' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[mn:flightDate:ok]' member='5' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='1' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='2' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='3' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='4' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='5' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='6' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='7' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='10' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='11' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='12' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='14' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='15' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='16' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='17' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='18' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='19' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='20' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='21' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='22' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='24' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='25' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='26' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='27' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='28' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='30' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='31' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[mn:flightDate:ok]' member='6' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='1' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='2' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='3' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='4' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='5' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='6' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='7' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='8' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='9' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='10' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='11' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='12' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='13' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='14' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='15' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='16' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[yr:flightDate:ok]' />
                <hierarchy name='[qr:flightDate:ok]' />
                <hierarchy name='[mn:flightDate:ok]' />
                <hierarchy name='[dy:flightDate:ok]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:segmentsAirlineName:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:segmentsAirlineName:nk]' />
              <groupfilter function='member' level='[none:segmentsAirlineName:nk]' member='&quot;Alaska Airlines||Alaska Airlines&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (YEAR(Flight Date),QUARTER(Flight Date),MONTH(Flight Date),DAY(Flight Date))]</column>
            <column>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (Segments Airline Name)]</column>
            <column>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (Segments Airline Name,Travel Duration)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:segmentsAirlineName:nk]' />
              <wedge-size column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[avg:totalFare:qk]' />
              <lod column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:travelDuration:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3073480129241943' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:isRefundable:nk]</cols>
      </table>
      <simple-id uuid='{4C26E52E-5D0E-45D8-9E32-F818CE660ADF}' />
    </worksheet>
    <worksheet name='Total_Fares_vs_Travel_Duration'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Calibri' fontsize='14'>Total Fares vs. Travel Duration</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='itineraries' name='federated.0p4f7a314fsfg21ar9fk41b04wy8' />
          </datasources>
          <datasource-dependencies datasource='federated.0p4f7a314fsfg21ar9fk41b04wy8'>
            <column-instance column='[totalFare]' derivation='Avg' name='[avg:totalFare:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flightDate]' derivation='Day' name='[dy:flightDate:ok]' pivot='key' type='ordinal' />
            <column caption='Flight Date' datatype='date' name='[flightDate]' role='dimension' type='ordinal' />
            <column caption='Is Refundable' datatype='boolean' name='[isRefundable]' role='dimension' type='nominal' />
            <column-instance column='[flightDate]' derivation='Month' name='[mn:flightDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[segmentsAirlineName]' derivation='None' name='[none:segmentsAirlineName:nk]' pivot='key' type='nominal' />
            <column-instance column='[travelDuration]' derivation='None' name='[none:travelDuration:nk]' pivot='key' type='nominal' />
            <column-instance column='[flightDate]' derivation='Quarter' name='[qr:flightDate:ok]' pivot='key' type='ordinal' />
            <column aggregation='CountD' caption='Segments Airline Name' datatype='string' name='[segmentsAirlineName]' role='dimension' type='nominal' />
            <column caption='Total Fare' datatype='real' name='[totalFare]' role='measure' type='quantitative' />
            <column caption='Travel Duration' datatype='string' name='[travelDuration]' role='dimension' type='nominal' />
            <column-instance column='[flightDate]' derivation='Year' name='[yr:flightDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (Is Refundable,Segments Airline Name,Travel Duration)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_C2A48019F3C34BEC8DA5B9D8662C7A53]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[isRefundable]' />
              <groupfilter function='level-members' level='[segmentsAirlineName]' />
              <groupfilter function='level-members' level='[travelDuration]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (Segments Airline Name)]'>
            <groupfilter function='level-members' level='[segmentsAirlineName]' user:ui-action-filter='[Action3_ED1B2998C18841E789DD3272DAF77671]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (YEAR(Flight Date),QUARTER(Flight Date),MONTH(Flight Date),DAY(Flight Date))]'>
            <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action4_249F5535DE0D4EC4B98F3DE9C4D751F7]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[qr:flightDate:ok]' member='2' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[yr:flightDate:ok]' member='2022' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[mn:flightDate:ok]' member='4' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='17' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='18' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='19' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='20' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='21' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='22' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='23' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='24' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='25' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='26' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='27' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='28' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='29' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='30' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[mn:flightDate:ok]' member='5' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='1' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='2' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='3' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='4' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='5' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='6' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='7' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='10' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='11' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='12' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='14' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='15' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='16' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='17' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='18' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='19' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='20' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='21' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='22' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='24' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='25' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='26' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='27' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='28' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='30' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='31' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[mn:flightDate:ok]' member='6' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='1' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='2' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='3' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='4' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='5' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='6' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='7' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='8' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='9' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='10' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='11' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='12' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='13' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='14' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='15' />
                        <groupfilter function='member' level='[dy:flightDate:ok]' member='16' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[yr:flightDate:ok]' />
                <hierarchy name='[qr:flightDate:ok]' />
                <hierarchy name='[mn:flightDate:ok]' />
                <hierarchy name='[dy:flightDate:ok]' />
              </order>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (Is Refundable,Segments Airline Name,Travel Duration)]</column>
            <column>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (YEAR(Flight Date),QUARTER(Flight Date),MONTH(Flight Date),DAY(Flight Date))]</column>
            <column>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (Segments Airline Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[avg:totalFare:qk]' field-type='quantitative' max='3095.6698969072163' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:segmentsAirlineName:nk]' />
              <size column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[avg:totalFare:qk]' />
              <text column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:travelDuration:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='line-interpolation' value='step' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[avg:totalFare:qk]</rows>
        <cols>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:travelDuration:nk]</cols>
      </table>
      <simple-id uuid='{3592670D-007E-4412-8E3C-F38FD251E190}' />
    </worksheet>
    <worksheet name='Travel_Distance_by_Start_Airport'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='14'>Total Travel Distance by Starting Airport</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='itineraries' name='federated.0p4f7a314fsfg21ar9fk41b04wy8' />
          </datasources>
          <datasource-dependencies datasource='federated.0p4f7a314fsfg21ar9fk41b04wy8'>
            <column caption='Destination Airport' datatype='string' name='[destinationAirport]' role='dimension' type='nominal' />
            <column-instance column='[flightDate]' derivation='Day' name='[dy:flightDate:ok]' pivot='key' type='ordinal' />
            <column caption='Flight Date' datatype='date' name='[flightDate]' role='dimension' type='ordinal' />
            <column caption='Is Non Stop' datatype='boolean' name='[isNonStop]' role='dimension' type='nominal' />
            <column-instance column='[flightDate]' derivation='Month' name='[mn:flightDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[destinationAirport]' derivation='None' name='[none:destinationAirport:nk]' pivot='key' type='nominal' />
            <column-instance column='[startingAirport]' derivation='None' name='[none:startingAirport:nk]' pivot='key' type='nominal' />
            <column-instance column='[flightDate]' derivation='Quarter' name='[qr:flightDate:ok]' pivot='key' type='ordinal' />
            <column caption='Starting Airport' datatype='string' name='[startingAirport]' role='dimension' type='nominal' />
            <column-instance column='[totalTravelDistance]' derivation='Sum' name='[sum:totalTravelDistance:qk]' pivot='key' type='quantitative' />
            <column caption='Total Travel Distance' datatype='integer' name='[totalTravelDistance]' role='measure' type='quantitative' />
            <column-instance column='[flightDate]' derivation='Year' name='[yr:flightDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (Destination Airport,Starting Airport)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action8_8E222D17DC3B4CCF81B452568A6E16A3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[destinationAirport]' />
              <groupfilter function='level-members' level='[startingAirport]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (YEAR(Flight Date),QUARTER(Flight Date),MONTH(Flight Date),DAY(Flight Date),Is Non Stop)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action9_FA30372D90334131A383D2E6521C2056]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:flightDate:ok]' />
              <groupfilter function='level-members' level='[qr:flightDate:ok]' />
              <groupfilter function='level-members' level='[mn:flightDate:ok]' />
              <groupfilter function='level-members' level='[dy:flightDate:ok]' />
              <groupfilter function='level-members' level='[isNonStop]' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:startingAirport:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[sum:totalTravelDistance:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (YEAR(Flight Date),QUARTER(Flight Date),MONTH(Flight Date),DAY(Flight Date),Is Non Stop)]</column>
            <column>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[Action (Destination Airport,Starting Airport)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:startingAirport:nk]' />
              <lod column='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:destinationAirport:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:startingAirport:nk]</rows>
        <cols>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[sum:totalTravelDistance:qk]</cols>
      </table>
      <simple-id uuid='{2A5FC2F9-BAB7-4CBC-B80F-FD068EE6882D}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Flight Trends and Pricing Analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Calibri' fontsize='16'>Flight Trends and Pricing Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-title'>
          <format attr='text-align' value='auto' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='24' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='5125' id='18' type-v2='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92875' id='22' param='horz' type-v2='layout-flow' w='98400' x='800' y='6125'>
              <zone h='92875' id='5' param='vert' type-v2='layout-flow' w='98400' x='800' y='6125'>
                <zone h='92875' id='6' type-v2='layout-basic' w='98400' x='800' y='6125'>
                  <zone h='30957' id='7' name='Flight_Price_Trend' w='49200' x='800' y='6125'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='30961' id='8' name='Fare_Distribution_by_Airline' w='49200' x='800' y='68039'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='30957' id='9' name='Base_vs_Total_Fare_Over_Time' w='49200' x='50000' y='6125'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='30957' id='12' name='Total_Fares_vs_Travel_Duration' w='98400' x='800' y='37082'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='30961' id='13' name='Refundable_vs_NonRefundable_Fares' w='49200' x='50000' y='68039'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout active='true' name='Desktop'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontcolor='#000000' fontname='Benton Sans Book'>Flight Trends and Pricing Analysis</run>
              </formatted-text>
            </title>
          </layout-options>
          <size sizing-mode='automatic' />
          <zones>
            <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98518' id='17' param='vert' type-v2='layout-flow' w='99166' x='417' y='741'>
                <zone h='4074' id='18' type-v2='title' w='99166' x='417' y='741'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='94444' id='15' param='horz' type-v2='layout-flow' w='99166' x='417' y='4815'>
                  <zone h='94444' id='5' param='vert' type-v2='layout-flow' w='99166' x='417' y='4815'>
                    <zone h='93704' id='6' type-v2='layout-basic' w='98750' x='625' y='5185'>
                      <zone h='31231' id='7' name='Flight_Price_Trend' w='49371' x='625' y='5185'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='31240' id='8' name='Fare_Distribution_by_Airline' w='49371' x='625' y='67649'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='31231' id='9' name='Base_vs_Total_Fare_Over_Time' w='49379' x='49996' y='5185'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='31233' id='12' name='Total_Fares_vs_Travel_Duration' w='98750' x='625' y='36416'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='31240' id='13' name='Refundable_vs_NonRefundable_Fares' w='49379' x='49996' y='67649'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontcolor='#000000' fontname='Calibri' fontsize='16'>Flight Trends and Pricing Analysis</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1350' minheight='1350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='46' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='45' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='5125' id='18' type-v2='title' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='240' h='30957' id='7' is-fixed='true' name='Flight_Price_Trend' w='49200' x='800' y='6125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='240' h='30957' id='9' is-fixed='true' name='Base_vs_Total_Fare_Over_Time' w='49200' x='50000' y='6125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='239' h='30957' id='12' is-fixed='true' name='Total_Fares_vs_Travel_Duration' w='98400' x='800' y='37082'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='240' h='30961' id='8' is-fixed='true' name='Fare_Distribution_by_Airline' w='49200' x='800' y='68039'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='240' h='30961' id='13' is-fixed='true' name='Refundable_vs_NonRefundable_Fares' w='49200' x='50000' y='68039'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A035AAF5-74AF-43CD-A095-F6F0622B2782}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Route Analysis and Flight Characteristics'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Calibri' fontsize='16'>Route Analysis and Flight Characteristics</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-title'>
          <format attr='text-align' value='auto' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='text-align' value='auto' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='21' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='5125' id='22' type-v2='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92875' id='19' param='horz' type-v2='layout-flow' w='98400' x='800' y='6125'>
              <zone h='92875' id='5' type-v2='layout-basic' w='98400' x='800' y='6125'>
                <zone h='46437' id='3' name='Travel_Distance_by_Start_Airport' w='49200' x='800' y='6125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46438' id='8' name='Fares_by_Start_and_Destination' w='49200' x='800' y='52562'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46438' id='11' name='NonStop_vs_Connecting_Flights' w='49200' x='50000' y='52562'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46437' id='17' name='Avg_vs_Total_Travel_Distance' w='49200' x='50000' y='6125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout active='true' name='Desktop'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontcolor='#000000' fontname='Calibri' fontsize='16'>Route Analysis and Flight Characteristics</run>
              </formatted-text>
            </title>
          </layout-options>
          <size sizing-mode='automatic' />
          <zones>
            <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98438' id='21' param='vert' type-v2='layout-flow' w='98828' x='586' y='781'>
                <zone h='4004' id='22' type-v2='title' w='98828' x='586' y='781'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='94434' id='19' param='horz' type-v2='layout-flow' w='98828' x='586' y='4785'>
                  <zone h='94434' id='5' type-v2='layout-basic' w='98828' x='586' y='4785'>
                    <zone h='47216' id='3' name='Travel_Distance_by_Start_Airport' w='49414' x='586' y='4785'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='47218' id='8' name='Fares_by_Start_and_Destination' w='49414' x='586' y='52001'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='47218' id='11' name='NonStop_vs_Connecting_Flights' w='49414' x='50000' y='52001'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='47216' id='17' name='Avg_vs_Total_Travel_Distance' w='49414' x='50000' y='4785'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontcolor='#000000' fontname='Calibri' fontsize='16'>Route Analysis and Flight Characteristics</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='40' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='39' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='5125' id='22' type-v2='title' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46437' id='3' is-fixed='true' name='Travel_Distance_by_Start_Airport' w='49200' x='800' y='6125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46437' id='17' is-fixed='true' name='Avg_vs_Total_Travel_Distance' w='49200' x='50000' y='6125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46438' id='8' is-fixed='true' name='Fares_by_Start_and_Destination' w='49200' x='800' y='52562'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46438' id='11' is-fixed='true' name='NonStop_vs_Connecting_Flights' w='49200' x='50000' y='52562'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{80A0B59A-4DE9-460B-941B-11CFCE2E1AB3}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style>
        <style-rule element='story-description'>
          <format attr='text-align' id='story-description_6' value='auto' />
          <format attr='border-style' id='story-description_6' value='dashed' />
          <format attr='background-color' id='story-description_6' value='#fffef5ce' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='1' param='vert' removable='false' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone h='7403' id='4' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='99034' x='483' y='940' />
            <zone h='90717' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='99034' x='483' y='8343'>
              <flipboard active-id='1' nav-type='dot' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='Route Analysis and Flight Characteristics' id='3' />
                  <story-point captured-sheet='Travel Distance and Airport Analysis' id='2' />
                  <story-point captured-sheet='Flight Trends and Pricing Analysis' id='1' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='96005' hidden='true' id='7' story-point-id='2' type-v2='text' w='36934' x='61135' y='1528'>
          <formatted-text>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>The &quot;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Travel Distance and Airport Analysis</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>&quot; dashboard offers a comprehensive view of travel distances associated with various airports and how these distances correlate with fares. It&apos;s designed to assist users in understanding the relationship between travel distances, airport locations, and fare structures.</run>
            <run fontalignment='0'>Ã†&#10;&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='11'>Charts Included:</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Comparison of Average vs. Total Travel Distance (Scatter Plot):</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'> Provides insights into how average travel distances compare with the total distances traveled.</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Total Travel Distance by Starting Airport (Horizontal Bar Chart):</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'> Showcases the average travel distances associated with different starting airports.</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Total Fares by Starting and Destination Airports (Circle View):</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'> Highlights fare trends in relation to specific starting and destination airports.</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Non-Stop vs. Connecting Flights (Scatter Plot):</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'> Offers a comparison of fares and travel distances for non-stop versus connecting flights.</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Distribution of Cabin Classes (Pie Chart):</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'> Presents the breakdown of different cabin classes, aiding in understanding customer preferences and travel patterns.</run>
            <run fontalignment='0'>Ã†&#10;&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='11'>Navigating the Dashboard:</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Interactive filters allow for customization based on specific airports, cabin classes, or flight types.</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Hover over elements in each chart for more detailed information, such as specific airport names or distance values.</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Use the scatter plots to understand correlations between distances and fares.</run>
            <run fontalignment='0'>Ã†&#10;&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='11'>Data Source and Reliability:</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>The dashboard pulls data from comprehensive airline and airport databases, ensuring high reliability and timely updates for accuracy.</run>
            <run fontalignment='0'>Ã†&#10;&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='11'>Interpreting the Data:</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>The horizontal bar chart can be used to identify airports with longer average travel distances.</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>The circle view chart helps in visualizing fare differences between various airport pairs.</run>
            <run fontalignment='0'>Ã†&#10;&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='11'>Definitions:</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Average Travel Distance:</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'> The mean distance traveled per flight from a specific airport.</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Total Travel Distance:</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'> The cumulative distance covered by flights from or to an airport.</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='92832' hidden='true' id='8' story-point-id='3' type-v2='text' w='38081' x='60290' y='4818'>
          <formatted-text>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Journey Overview:</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'> Embark on a data-driven exploration of flight routes and their unique characteristics. This dashboard is your cockpit for navigating through intricate details of flight paths, duration, and more.</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Key Elements:</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Flight Path Analysis:</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Chart the skies with our comprehensive analysis of various flight paths. Understand which routes are most frequented and explore the intricacies of different journey patterns.</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Aircraft Types and Usage:</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Delve into the world of aircrafts! Discover which models are the workhorses of the sky and how their usage varies across different routes.</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Flight Durations and Frequencies:</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Time is of the essence! This section provides insights into the average duration of flights on different routes and their frequency, offering a window into operational efficiency and traveler preferences.</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Capacity Utilization:</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Understand how airlines optimize space. This area of the dashboard sheds light on seat occupancy rates, helping you understand trends in passenger volumes and aircraft capacity utilization.</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Environmental Impact Considerations:</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>In an era of environmental consciousness, this section offers a glimpse into the carbon footprint of different flight routes, assisting in the evaluation of eco-friendly practices in aviation.</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Dashboard Navigation:</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Interact with the charts for detailed specifics on each aspect.</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Utilize the filters to tailor the data view to specific airlines, aircraft types, or routes.</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>The dynamic nature of this dashboard allows for a multifaceted analysis, adapting to your focus areas.</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Perfect For:</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Airline operations teams strategizing on route optimization.</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Environmental researchers focusing on the aviation industry&apos;s impact.</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Aviation enthusiasts and analysts looking for in-depth insights into flight patterns and characteristics.</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Embark on Your Analytical Flight:</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'> This dashboard is designed to be your guide through the complex world of aviation route analysis and characteristics. We hope it empowers your strategies, satisfies your curiosity, and elevates your understanding to new heights. Enjoy your analytical journey!</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='92244' id='9' story-point-id='1' type-v2='text' w='34762' x='61255' y='1293'>
          <formatted-text>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Welcome to Your Flight Trends and Pricing Analysis Dashboard!</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Your Personal Flight Data Navigator:</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'> Gear up for a high-flying journey into the world of airline pricing and trends. This dashboard is your personal co-pilot, guiding you through the ever-changing skies of flight prices and trends.</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Dashboard Features:</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Flight Price Trends Over Time:</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Take a bird&apos;s-eye view of how flight prices have evolved. Watch the ebb and flow of fares over time, helping you pinpoint patterns and anomalies in the pricing landscape.</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Airline Fare Distribution:</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Dive into a detailed breakdown of how different airlines price their flights. Compare and contrast, and discover who&apos;s flying high in affordability.</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Fare Composition Analysis:</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Unravel the mystery behind what makes up the total fare. This chart dissects base fares and additional charges, offering a transparent view of what passengers pay for.</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Price vs. Duration Insights:</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Explore the fascinating relationship between travel duration and fare prices. Are longer flights always more expensive? Find out here!</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Refundable vs. Non-Refundable Fares:</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Step into the world of fare flexibility. This insightful comparison sheds light on the pricing differences between refundable and non-refundable tickets.</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Navigating the Dashboard:</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Interact with the elements for in-depth insights and customized views.</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Use filters to focus on specific time periods, airlines, or flight types.</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>The dynamic design allows you to mix and match data views for a comprehensive analysis.</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Ideal For:</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Travel industry professionals seeking to understand pricing strategies.</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Budget-conscious travelers looking for the best time to book.</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Data enthusiasts curious about the intricacies of airline pricing.</run>
            <run fontalignment='0'>Ã†&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'>Embark on Your Analytical Journey:</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Calibri' fontsize='10'> This dashboard is more than just numbers; it&apos;s a storybook of how airlines price their flights, how these prices change over time, and what factors influence them. We invite you to dive in, explore, and emerge with valuable insights that could change the way you view air travel. Happy analyzing!</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{04E04FBC-1466-444E-A195-8426358443C9}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Travel Distance and Airport Analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Calibri' fontsize='16'>Travel Distance and Airport Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-title'>
          <format attr='text-align' value='auto' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='6' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='29' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='5125' id='30' type-v2='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92875' id='26' param='horz' type-v2='layout-flow' w='98400' x='800' y='6125'>
              <zone h='92875' id='7' param='vert' type-v2='layout-flow' w='98400' x='800' y='6125'>
                <zone h='92875' id='8' type-v2='layout-basic' w='98400' x='800' y='6125'>
                  <zone h='30957' id='9' name='Avg_vs_Total_Travel_Distance' w='49200' x='800' y='6125'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='30963' id='12' name='Travel_Distance_by_Start_Airport' w='49200' x='800' y='68037'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='30955' id='15' name='Fares_by_Start_and_Destination' w='98400' x='800' y='37082'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='30957' id='18' name='NonStop_vs_Connecting_Flights' w='49200' x='50000' y='6125'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='30963' id='27' name='Cabin_Class_Distribution' w='49200' x='50000' y='68037'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout active='true' name='Desktop'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontcolor='#000000' fontname='Calibri' fontsize='16'>Travel Distance and Airport Analysis</run>
              </formatted-text>
            </title>
          </layout-options>
          <size sizing-mode='automatic' />
          <zones>
            <zone h='100000' id='6' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98518' id='29' param='vert' type-v2='layout-flow' w='99166' x='417' y='741'>
                <zone h='3797' id='30' type-v2='title' w='99166' x='417' y='741'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='94721' id='26' param='horz' type-v2='layout-flow' w='99166' x='417' y='4538'>
                  <zone h='94721' id='7' param='vert' type-v2='layout-flow' w='99166' x='417' y='4538'>
                    <zone h='94721' id='8' type-v2='layout-basic' w='99166' x='417' y='4538'>
                      <zone h='31572' id='9' name='Avg_vs_Total_Travel_Distance' w='49583' x='417' y='4538'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='31579' id='12' name='Travel_Distance_by_Start_Airport' w='49583' x='417' y='67680'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='31570' id='15' name='Fares_by_Start_and_Destination' w='99166' x='417' y='36110'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='31572' id='18' name='NonStop_vs_Connecting_Flights' w='49583' x='50000' y='4538'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='31579' id='27' name='Cabin_Class_Distribution' w='49583' x='50000' y='67680'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontcolor='#000000' fontname='Calibri' fontsize='16'>Travel Distance and Airport Analysis</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1350' minheight='1350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='52' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='51' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='5125' id='30' type-v2='title' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='240' h='30957' id='9' is-fixed='true' name='Avg_vs_Total_Travel_Distance' w='49200' x='800' y='6125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='240' h='30957' id='18' is-fixed='true' name='NonStop_vs_Connecting_Flights' w='49200' x='50000' y='6125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='239' h='30955' id='15' is-fixed='true' name='Fares_by_Start_and_Destination' w='98400' x='800' y='37082'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='240' h='30963' id='12' is-fixed='true' name='Travel_Distance_by_Start_Airport' w='49200' x='800' y='68037'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='240' h='30963' id='27' is-fixed='true' name='Cabin_Class_Distribution' w='49200' x='50000' y='68037'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8F8C6EEF-1ACF-4748-BD8C-6277E63B261A}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' name='Flight_Price_Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{84F58F1B-9E2F-425C-9E6C-CFDDED5F5DF8}' />
    </window>
    <window class='worksheet' name='Avg_vs_Total_Travel_Distance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:startingAirport:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:segmentsAirlineName:nk]</field>
            <field>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:startingAirport:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{20F562FB-F935-4628-90A2-6AF16B76C2F4}' />
    </window>
    <window class='worksheet' name='Travel_Distance_by_Start_Airport'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:startingAirport:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[avg:totalTravelDistance:qk]</field>
            <field>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:destinationAirport:nk]</field>
            <field>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:startingAirport:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{43FE8F68-CAC6-40BB-ACA5-6252D6A840A7}' />
    </window>
    <window class='worksheet' name='Fare_Distribution_by_Airline'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[max:segmentsAirlineName:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{14F327A7-0130-454C-8809-CFBBD4BC2C59}' />
    </window>
    <window class='worksheet' name='Fares_by_Start_and_Destination'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[avg:totalFare:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[avg:totalFare:qk]</field>
            <field>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:destinationAirport:nk]</field>
            <field>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:startingAirport:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C3D4B46A-62D8-45E9-B485-96B0BDFC3647}' />
    </window>
    <window class='worksheet' name='Total_Fares_vs_Travel_Duration'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:legId:nk]</field>
            <field>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:segmentsAirlineName:nk]</field>
            <field>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:travelDuration:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A5C42ADE-5AED-4583-87E9-9470A2DEE116}' />
    </window>
    <window class='worksheet' maximized='true' name='Base_vs_Total_Fare_Over_Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[yr:flightDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BA68D654-2F28-4882-9C98-68EDFDC7650C}' />
    </window>
    <window class='worksheet' name='Cabin_Class_Distribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:segmentsCabinCode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A819B87F-96D9-4D92-ACA9-7E60D797CA0C}' />
    </window>
    <window class='worksheet' name='NonStop_vs_Connecting_Flights'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[mn:flightDate:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[mn:flightDate:ok]</field>
            <field>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:isNonStop:nk]</field>
            <field>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:startingAirport:nk]</field>
            <field>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[tdy:searchDate:qk]</field>
            <field>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[yr:flightDate:ok]</field>
            <field>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[yr:searchDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9A68E63C-0DAD-4E32-A79B-4E8D18EED6F1}' />
    </window>
    <window class='worksheet' name='Refundable_vs_NonRefundable_Fares'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:segmentsAirlineName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:isRefundable:nk]</field>
            <field>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:segmentsAirlineName:nk]</field>
            <field>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:travelDuration:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7FA4AA23-46A0-4668-8093-DA72573B4038}' />
    </window>
    <window class='dashboard' name='Flight Trends and Pricing Analysis'>
      <viewpoints>
        <viewpoint name='Base_vs_Total_Fare_Over_Time'>
          <zoom type='entire-view' />
          <highlight field='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Fare_Distribution_by_Airline'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:segmentsAirlineName:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;United||Alaska Airlines||Alaska Airlines&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Flight_Price_Trend'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.0p4f7a314fsfg21ar9fk41b04wy8].[yr:flightDate:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>2022</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Refundable_vs_NonRefundable_Fares'>
          <zoom type='entire-view' />
          <highlight field='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:segmentsAirlineName:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Total_Fares_vs_Travel_Duration'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview visible='true'>
        <device is-portrait='false' name='Generic Desktop Monitor' type='Desktop' />
      </device-preview>
      <simple-id uuid='{231C5C40-4072-479C-B13E-DC1BCDCCFF86}' />
    </window>
    <window class='dashboard' name='Travel Distance and Airport Analysis'>
      <viewpoints>
        <viewpoint name='Avg_vs_Total_Travel_Distance'>
          <zoom type='entire-view' />
          <highlight field='[federated.0p4f7a314fsfg21ar9fk41b04wy8].[none:startingAirport:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Cabin_Class_Distribution'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Fares_by_Start_and_Destination'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='NonStop_vs_Connecting_Flights'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Travel_Distance_by_Start_Airport'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview visible='true'>
        <device is-portrait='false' type='Desktop' />
      </device-preview>
      <simple-id uuid='{0E21C7D8-4713-466E-A88F-2320799323E2}' />
    </window>
    <window class='dashboard' name='Route Analysis and Flight Characteristics'>
      <viewpoints>
        <viewpoint name='Avg_vs_Total_Travel_Distance'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Fares_by_Start_and_Destination'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='NonStop_vs_Connecting_Flights'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Travel_Distance_by_Start_Airport'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview visible='true'>
        <device is-portrait='false' name='iPad Pro 12.9-inch' type='Desktop' />
      </device-preview>
      <simple-id uuid='{AB13D8C5-0B23-4913-95EB-5A83C17AE945}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{F3CA6683-96FA-4AAF-8072-A2F30292403A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Avg_vs_Total_Travel_Distance' width='192'>
      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
      /wHqiVB/dajp1gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Base_vs_Total_Fare_Over_Time' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2deXAc133nP6+75x5gcN/3JZ7iIUqUqMOSLcmSZVux4yOJ45SzWa+TSm0S
      b21SlWxlk2w262wlrq0cm3K51uv12tlEtmNblmzLsiPZkixaEu+bIEESIO5z7rO73/4xJAQQ
      AAEMBsCM8D5VUyTedL/3uqe//a7f7/2ElFKiUGxRtM2ugEKxmRg3/xONRrEsKy+ZptNpHA4H
      Qoi85KdQrBdiPbpA0WgUj8eDruv5zlqhyCuqC6TY0igBKLY0SgCKLY0SgGJLowSg2NIoASi2
      NMbyhyjMVILUqW/g0Ox56cJXg2Pb+zapVop8oFqAFTA6eJWBV/8R01mG8FbOftJvfnGzq6ZY
      Izm1AFJanD5xggxOqv0OUu4ANW7J+cEp7t23O991XLoeiRkSz3/2lkQQ3grc7/srhJafhbiB
      sRCpTClTcj8PbG+ZTU8f/Upe8ldsHrl1gaRNJm2SzkSIeVohFWMqDSUeA9u2sW0by7JYbzs7
      mYwgDQ/Oxz83J9Ei9d3fxjIzoOWn/MtD0zxQF+ArR/o4uL1+1sRDAqZp5qUMxeaQkwCEMGho
      qmdiKozHAZohiKQ1NDJomoamaei6vu6mELZuoOkOHL6y2TRpm6Q1A13XEfrtL8+euYY1cnpB
      ut64Dy3QlD3GlvSPhfhoawnOoM7QZIy2+mx5AjAMNYwqZnL+9corqqisaUDXBJoA0xYI7OVP
      LCAyZ59FJmbQKtpn06yxs9iREVwH/x0A4XgK2862JI8e6ORHR/r49Afu2pT6KvJPbgIQArfH
      Oy/JocGGj6mlxLIlUsr5lqfpKJmz34E5YwBhuDC6H0PozrkZYHQ/itH2wGxKpveH2MGB2b+H
      JiNUl2WvdV9XHf/yk3NEE2n8nrn5KIqVop4FSpkWxy+N8NKxq2+PN4SO8+BnwEpDJjH7Sb/x
      RWR0bPZcKSWJlLnsOKVvaJrOhnIAnA6du7c18PqZ6+t2TYqNpag7sKFoiu2t1Xzh7CDxZIan
      DvWgCYHjjicXHGsH+0k891kQGrZtMx6M49Ztrnn3s7d9kcxvcGV4hqd2VkBf9u9H9rfz+WcO
      89iBjnW6KsVGUtQtwEwkgdtp8Pu/fIiL16f4xstnZ/vrt+J6+A/xfuLr6B/5Gl/2/Edeavsv
      yI88w7MX9SVbASklYzMxait8s2mVpR4qSz1cvD61Ltek2FiKugUIRpM0Ay6Hwe9+5CBffO4Y
      X/7BCX79fXvRbvFGE0IwHU7y+WcOc//uZp442IVAEImnSKRMvG7HgvyjiTQC8LudpObk8957
      unjhjcv822SI5L/++fyTDBeu+38XYbjW5ZoV+aWoBTATSc7+32Ho/ObTd/G1F0/xV//0Ojvb
      qvG6HXhcDrxuB6m0yTMvneHXntjLnR01s4PmrsYKLg9Nc2dn7YL8ByfCNFWXLkjf2V7NV394
      ktST/wOPa74bafLlz0EmDkoARUFRCyAYTWYn42+gaxqffHwPJ/tGmQoliCbSjM/EiKcyZEyb
      z37svgUP9J6uOk72jS0qgCvDQTpuDIDnognBu/a28sp1mw89uGved8JVkp+LU2wIRS8AccsL
      WtME+7rrV5zHtpZKvne4d8FUqpSSK8PTPHGwC4gvOO/BO1v5i6++wgcO9WDoRT2U2tIU9S8X
      jCYRrG3nifISD0KIed2pmwxNRmioWvyNXupzUVnq5fp4aE3lKzaXohWAlHJBFyhXtrVUcmFg
      cl5a2rSwbInHuXBwfJO7tzfy1vnhtVdAsWkUrQBSmezgMx87D+3prOPk5bF5aQNjIZprStG0
      pUvY01nLyb6xdTf6U6wfRSuASDx/5gjtDWVcHZmZ9yD3Dc/MrgAvRXmJG4ehMT4Ty0s9FBtP
      EQsgRak3P1ONXpeDgN/NyFR0Nq1vaIbOxorbnieE4MAdDRy5qLpBxUrRCiAUSxLw50cAQgh2
      tddw5so4kB1f9I8FaastW+ZMOLCtgSMXR1Q3qEjJSQBS2pw+cZTjx0/Rf+kifYNjhCdHePPE
      2XzXb0mCkSRlfnfe8tvTVcvJvlEAEikTTQjcruVniWvKfMSTGaKJTN7qotg4clwHEJiZDGkJ
      UishnYwwlQKvS9swj7CpcJwKnwsZlHnxyqor9zI6HSWdNhmZilBT5p3NV964lqXK2dNZw5EL
      gzx4Z0v2OMtCKE+xoiBHl0gTqTnw6YJkRuJ1C2Kmhi42ziMsHEvT1eBFhERevLJ0XdJUXcr1
      iX76x0J0766czdfWdUyxdDn37mzmmz89x8P72hFCYOg6QnmKFQW5uURqBtu334EpdTxOB5oG
      GVugbaBH2Ew0SXnJ8n30lSKEyJpFHHuDVDDOXcvMAM2lrb6M8ZkYiZQJSGQqAuIW8bv8CFG0
      Q653LDl3gTxe/7wUlw6wMduhSykJRZMEfPkbAwDsaq/hH1+MsE8boT74OpkL2WlWGZ+87Xma
      EGxrqeJ8/wS76naT/NGfMHeFwg4P4n78zzGaD+a1voq1U7TtdNq0cDnyK7jqMi9BXw9TMo7P
      nMaOvP2dY8/Hb3vuwR1NvHqyn/2/8DsLvku98tfZLSQUBUdRCkDK7G4Nuq6Rn5g2WYQQNLV1
      cy3ejOvuQ6s6t6e5gv/7w5NkTBtnnoWpWD+KslNq2tmxhn4bM4VcuW9XE/fuaF71eS6HQXNN
      KX3D03mvk2L9KMoWIBxLUepzrUsMsl3tNTmfe8/2Rt48P8T21uo81kixnhRlCzATSeR1ESxf
      7Gqv4ezVCbUqXEQUpQCC0STlJYUnAJ/bgdtlML2Ib4GiMClKAcxEkpT5PZtdjQUIIagp8zEd
      XuhBpihMilIAwUhhtgAAlQEvU6HEZldDsUKKUgAz0fwawuWTqoCHyZBqAYqFohRA1hS6QAVQ
      6lUCKCKKUgDBaJKyPPkC5JvKMiWAYqLoBGDZNsm0ide1tLP6ZlJZ6mE6nFBToUVC0QkgY9o4
      DX1dFsHygcthkLFsrCX2KFUUFjnHCOu7eJGxqRBNtVVY3gDVLsnFoWkO3Lk933WcRzpj4TAK
      19ZG0wSaEFiWrTbMKgJyDJGk09nTjXl5AE0TxONhJhPgdrDuHmHhWAKvy8A0TaRl3tZTa7Nw
      O3XCsSTlWnagLqWNbVsFV0/FGmyBRq8PUNfUTGR0CI8uiFsCXbDuHmGRRIaKUg+GYWDrxm09
      tTaL6jIfwViK6vKsz4QpNDRNL7h6KtYggIq6JpwuJ76mRnQNUpZGfo2TF6dQV4HnUhXIzgR1
      N1VudlUUy5CzAFyu7DSkw5n1mvIYa8puxRSqHdBcsgJQq8HFQNGN0mbyvB3KelAZUGsBxULR
      CSAYTVJe4AKoKHEzE1YtQDFQdAKIxFP4vYUdorSsxJ3duVpR8BSdAGLJDL4Cj9Fb4nURS6ax
      7OIKHL4VKSoBSCmJJzP4CtQM4iaaELicBsmUmvcvdIpKAMm0icPQ0ItghdXrchBPqf1CC53C
      f5LmEE9m8C0SzrQQKS9xLxp2SVFYFJUAYskMPndh9/9vUqWmQouCohJAMFq4jjC3knWNVAIo
      dIpOAIW+CnwTtRpcHBSVAIphFfgmlaUeptTuEAVPUQkgGE0UTQvg97iIJNKbXQ3FMhSVAIqp
      BfC5HcSTGeUaWeDkaL4pmRwdYiZuU+l3YLtKKHVIrk+E6WxtzG8N5xCOpfIeE2C9cBg6mhCk
      0utvIq7InRxdIiW9ly5T3dBONBwnSoKEIQlHU0jZgJQS27bz7rebzJg4DIF9w8TAtu0bW6UX
      pslBwOdiJpqgTMrZe6LYKCSkImDf8gLSDHCVzP6ZY4ww8JVW4NUSBOMODJdNwhS4jfV1VE9n
      LJxF5FUV8LsIRZOsPNiSIl/IRIjE1z+JKJ3bI5HYoSG8n/wWQs+uJ+UYI0xQVxUgnISmhgAu
      BwTTGoZMI4RACDHrGpkvMqaFAJyOOTtCaBrihhtmIVIV8DEdSdI2554oNoaUmWEkU0bjU/8T
      7w3rAWlbJL7xKTQhEDd+i5xjhNU2tlI7J6VujRVejkg0TrM7jAwOzEYbsqNj61zq2qgKeJgM
      qqnQzWB0Oko4luK733mLz37sPrQlgqkUTX+iZOYEn5T/h9Trh99OlBK9gAPPVQW89I+NgG+z
      a1KcWMMnsMZWFnxdb9iHXrtj9u/LgzPsrQ9Q4nPx7M8u8gsP3LHoeUUjgEw6BR2P4nnk9za7
      Kitm1jVyHQQgrQzYt5pbCzDWJ3LOZpA+9XW0QCNaSf1tj7NnrpE5/+x8AQxPs18IPvXkXv78
      K6/QVhdgb+fC6D9FI4BwLIW/gDfEWowyv5vQKj3DpLSzUQDnIsS8GMNSShLf+S1kOj7blwWw
      Q8N4Pvi36HW71lTvQsLofgy9que2x5iDRzAv/2j2byklA6MhjEYdp6Hzux85yOe+9hp1H7+X
      UitN4rv/Hm68JIpGAKFokjKjuAaRTkMnY9rIFcZItUODxL/x6wjPnHkjaYPhxvdLX5t3bCad
      xvv0F3B4S2fTki/9BVjvjNXnm7GgU+NhWqtWd+50JImha7NBFKsCXv7N+/byd99+iz/+pS/g
      0t6eGi2aJ2o6kqDYWnbD0LClxF7hPqEyk0BvOoDvE1+f/Xg/9hWENr/lS5sW/aNBfnLi2jrU
      ujCwbcmloWmeP9yLZa1u/aR/NEhrXWBe2o62ah7Y3cL/+tEl8Fai+arQfFXF0wJMhuJQsdm1
      WB2aEJT6XASjyXkzZgDWyAlSr/0tcyNoy0wcbZnmHuB8/ySmafGjI1e4f//22Wm+dxJ9wzNE
      4inww7FLI9y9beUWBpeHpulqrICRt9OEEDxxsIvPffVVLl2f4o6WbLNSFC2AbUumi3SbkaXM
      ou3gIHrLPXg++DfMHPoL/sX9G/zZxMf5b9cexF7GfuhY7wiGrnHfziZefKtvvaqerWd4GGv8
      wvzPRC9ywQA8v5y4PIrf4+Lp++/gO69eXPEGA1LKrACaFr4tNSH46CM7+darF2ZttIpCAKZt
      E4ymNrsaOVEV8BKMLC7ey6Nx/vIbp/jiD3tpaW7iz37zAwjDcdu1A8u2udA/SUtNgMcOdPKz
      0wPEkuvX70++8Iekj3yJ9PGvzn4S3/ss9gqnJ3NBSsmZK+N0NpZTX1lCU3UJb10YXtG5tpTM
      RJJUlnoX/b67qQLTtLkyMgPcZhCcScWJJS08Xg8ux+b2lDIZi0giRTFOqFcFvERvMYuWUnLx
      +iSxeJqPPbKD9oZytBsDnAM9DRy9OMyT93Yvmt9EMI7f48TtNPC4Hdy/u4UX37qy5Dz3mtEc
      uB/5TwhP2WxS8sd/CmL9ZuRiyQypjElFiQcEfOih7fzNN3/O3dsa0JdZTQ9FU3hdDhzG4jvV
      CiH44AN38N3XLvJ7H7136RbgtVde5sz5k5w8fnqt17NmZiLJgo0IsxyVAS+x5PzdIU5cHuWV
      kwPs66mjs7Fi9uEHOLCt4bZvu5OXx9jT9faI4vF7Onn1ZD+Jd9AWLL3Xp+hpfntj4dpyH621
      Zbx5fvlWINv/v7311e72GmaiSQYnwksLoMTnY+DSZSobW1dR9fVhMhwvGjPoW6kq9cyb1g/H
      Uvzjj07z9BJv7PpKP2nTWtKb7GTfKHs63xaAx+ng4X1tfP+NSyAEmb6XSJ96Zt7HDl5fdb2l
      hL6haa6OBjd8e5eTl0fZ0/m2cY0Qgg8/tJ3v/uwiGfP25uVL9f/nommCDx66g2dfu7i0ACbH
      x+jasRe/e/MXn6ZC8aLxBLuVioAXIcAaeJ3M+ec49v0v8aG6q1TGexc9XgjB3u46jveOLvgu
      kcowGYzTVBOYczw8fncnh88Mkup4P1pZCyBmP9bwScwrLy9bTykl5tAxzGuvYV57jeD5l3ju
      ma/gtGJcGprJ8epXj5SS3sHpeS0AQE25j7a627cCUkquDM/QUb+8/e3e7rrbtwC79+1Hmiky
      BRDVZDKUoCqw+KCm0PE4Da54D2I7yzh28ixeO8zdrS60smb09ocWPefe7U28cW5wQXrf8Axt
      dWWzCzw3cTsNHt7XxotXDZx3fmzex2g6AGIFYzgrRfKHf4R1/S3OHX6BYz99nt+6B9zbn+Tw
      xamcrj0XJkNxnIZOqW9hFNAPPbiN5w/3Yi6xLpAxbYLRJDXly48VDV3j/ff1LD0IPn/2DMNj
      o6SEj6baWwM9SAauXCJpO6kOuGc9woamIrQ13d5uIxemwnF2BTxAJO95bwRhbwejzfv5xpG3
      +JNPvQun9/YhXuur/ITiKaKJNL45DfDx3hH29Sx+fx+9q53//L9/wnvv6aR0mfyXQvNVc6rq
      o3zz7AV+/1cO4Qp4qU6bXPnSy1i2vewANB+cuzbJjrbFl36ry7x0NpTz+pnrPLRnYdd8OpKg
      zO9GCLGitfdDu5oXbwFs26Zrxx5am5qoKA8sPEBKRkfHcXs8RENRxibGGBsbYyY4jbzh/XTT
      Ayofn2AkScDvmvX+KraPx2XwD99+i195dBc+t2PZ4wWwr6uOIxeGkbaNvPGbnOufZFtLZfb+
      wrx77HLoHNrZxMvHrs7LSwKS5X8LaUtGp6N859UL/MEvH6KixI1t2zgNjdpyH9dGgm8fm+ff
      d+7nZN8ouztqbnjPSaQt55X7gUM92VbAtG6pDze6P2WzaTef5aU+IBcXwJkzJykjRPs9H2BX
      d/PC5x/BgXsPkQmNErN0NGmTsMBtzDfYytcnGE3eGATnL8+N/FQFvPQ0V7Kns3bF59y7o5HD
      Z6/P/pBT4TiGLij1Om+kLTznXXtbefXUANach1RKCSsobyocR9MEf/Arhyjzu+Z9t6ezlhOX
      R9/O74ao8n2fbCkZGAvRWhuYfahvLacq4KGnqZLXTg/Mqw9ILg9O0dlYMSd9+TIX7QKlI5M8
      d/QqpnGBA/fez+7ulgXHXLt8AdMZoK4i6xE2kxI4ZGaeR1g+guSlMxYS8LgMLCHWJfDeevOJ
      x+7E4zJWVfe2+nKmwwkSaQsNOH1lgj2ddei6jpQSQfYeizl5VpR66Wgo59SVCe660VWyhUCK
      5X+L7/38Mk/7XJT63PMsTwH29dTzd//yJh9+aPvbv+8K8lwKa6pvodGe4WbErKAq4MXnyXbh
      lnqOPvyu7Xzuq69y/+4WHIaOvFGn/vEwTxzsRtd1bE0Dln9eFhXAgfsf48D9S58khKCjZ8e8
      NE/JEgevkUQqg9dlwAotKguRxQZ0K2F3Zy0n+8bYR9b84cMPLR+D+cmDXfy/H59hf3fdiv0C
      psIJzl+b4KNViw8JK0o8JNMm8dTa92aV6TiJb/8mRst8Ryaz/zCndvw9uzsW2uzfSrnfzY72
      Gl47PcAj+9qB7AA4HE1RGVhdAMUlB8G9F86QNiVuj4+uzo5VZZpPQrEUpT43UJy2QLkihOCh
      Pa388wtvcqec4s7w16i72EKyVwASOzzEYuaxbXVlOHSNy4PTdDcvH6VSSsm3fnqepx/Yhri4
      +DGaJtjfU8fRiyOLDj5XhbTRShtxP/5f5yXH/vkTVJ/7B5prAiRfyj7E9vg5hLbwERVC8KEH
      t/HX//w6+3vq8QFDE2Hqq/yrHqgveXQiEuLNn79Gws7t7ZUvJoIxqsuKcwp0rbTWBohkdI42
      /TZWy0M4u96D0flujM734Hnq8+BY+LYTQvD+Qz0893ovcgWN5thMjGujQe7ZcXtry3u2N/Lm
      +aFcL2VZ5OOf52XzEDUPfRrnvl/Fue9X8Tz994jytkWPL/O7efDOFr53+BKQnSLuySEs7ZIt
      gKW7qa8qIxoJAeu32dVyTIbiN9YANm4uulAQQrC/p56vHL7E7/ziwxjNK9t6YHtrFV/70Skm
      grFlt2R5/vVe3ndv14K1hVtprStjdDpKMr0+60IXxm1qWrehl6+8hXnX3jb++Esv895mL6Xm
      OA32KTKX+gGQyfAiLqMLWXqFJBWmoXsPHvc6de5XyFQ4QWdDkTkC5JED2xr45k/Ps61l5W83
      IQSP7GvnpWNX+cVmP5mjX57nMohtoVXfAS2HSPUdZ1/PXsyrvchbN5GagyYErbVlXB0J0p7D
      dUgpCcdSvHKkl66xID/+1pu01ZXRUV9GY3Upxy6NcFdPw6rydDsNHr+7g+9dGKTcdwf7xTj2
      9OTs9449H182jyUFIDSdc8ff4I4D715VpfLNZCjOwe2NsEWDrTRXB/iTT70LzyqNAQ/tbOJP
      v/wTPvTgI3hb75v3nUxFyZz9NkdeeZGnOkrQJ85gA849HydrQrE4+3rqOH5pZFUCkFIyNhPj
      +dd7uTAwySM7q6mvLOG9d3dybTTIa6cHGJyIMBWK84nHdq/qGgEe2tPKH73Rh9Dew1P3Pbbk
      9idLsXQXyHBT4nMSDwWBzTOIC93cD3SLCkDTBNtaVukUC/g8Tna21/DmhREevHP+NLZwlWDt
      +zTfPPoS//2JR3E6VjadubOtmhfeuMyHV/A4SCm5ODDFc4d7CUaTvO9gF596ci+6GSfxrE5P
      c+UCe59ccDkMnrqvm4vXp1b98MMSAghPDiN1LyW+Mrp6utZcybUQT2bekS5/G8Hjd3fyhWeP
      8MDu5gVToi8fv8b9u5pX/PBDduCpaYKpcJya4AA4FjFQlHB9IsTzr18ikcrw5MEu7mhpRtPS
      ELyCnY4D+d0j9eG9bQtEvlIWFcC53su4rDDept1c7T1H3cG711TBXDEtm3TGwu0y8nzLtgb1
      lX5cToPXTl+nptyHrgl0TWBLycvHr/LHv7a4Md5SCCHY2VbNxalOKq6+Aldfmf0unsxw6soY
      uia4s7OW32i48WiNn8Ucn5+P0fHIWi9tHpom0LTcFuUWFYCTDGf7RjH7I2zbtWdNlVsLkXiK
      Eq8TTQglgBwQQvBL797Jj49e5fSVMWxbYtk2liV5/O7OnOKt7euu5/tTe3j3k58BspMUP3jj
      EseGRjh0VzOPHugomhgOsIQA9h96D/sPbXRVFpLt/2/uOkSx09lYQWdj/mbRWusCXB8Pc3lw
      mh+8cYmhyQiPHejkLz+zE4ehFd2udAW9Lcp0OEFF6eqWthXri9Mw6Gwo559eOsP77+tmd0ct
      RhEELl+KghbAVDi+pHe/YnMQAj7zwbvQNFF0b/vFKGjpFrMn2DsZXS++rs5S5CwAMxnl2Mmz
      jF+/xuD4NPHQFKcvXM5n3ZgKxVdt3adQrIacY4Rd6x/CaQhSaZtoagZLk0g7M+ttY1nWHGeF
      3JgMxSnzOTFNE8uysW2JWQA+yop3DrmNAew0sXicsfFJnK1tOByChC1waMyGRtJ1fU3OK1JK
      kmkTv9eNYRiga6CJ7P8VijyRW4ww3cWeffuIRqPomobDgFhGQ5f5eztLsgthjiKLCaAoLtb0
      OvX7/bP/D6zNUWgBqbQ5b493hWI9KNhZoKlQgspS7ztmtkFRmBSsACbDcTUFqlh3ClYAagpU
      sREUrADUIphiIyhYAWTNIFQLoFhfClcAoQSVqgVQrDMFKYCb2yGWF5FduaI4KUgBpE0r671U
      xGa2iuKgIJ+wdMZala+qQpErBSmAcDyV8x73CsVqKEgBqAGwYqMoSNPKSDhEkzOIPdM/m2ZH
      xjaxRop3KgUpgIp4L53TL5B6fU43SEocO39h8yqleEciZA5eK1JKrvVdJJaGqhIPtidAudPm
      ymiQnT0dRKNRPB5Pzv4AqYyJrmlF7WytKA5y8wcQgkBpKTNDEyQcDhKpKTKaxDLTefEI0wUg
      bUxT7QakWF9ydon0lJTj1UdJmuB0SpK2wKGJvHmEKRQbQc5jgKnxYdzl9VSXl+J0QDStocuN
      jSiuUKyVnMYAy7HWMYBCsVGoUaZiS6MEoNjSKAEotjRKAIotjRKAYkujBKDY0igBKLY0SgCK
      LY0SgGJLowSg2NIoASi2NEoAii2NEoBiS5ObObSUXLtyiVgaqks9WO5Syp2Sq2NBtne15beG
      CsU6krM/QEtbBxfOnSMS00klJsnokE6l8hojTKFYb3LzCAMuXTxPa/d2pocHsaVFwhI49Wzs
      2JseYZqmeliKwibnFkAA1wf6qa+tpdYJkbSGTmZeRBcV3UVR6CiPMMWWRvVRFFsaJQDFlkYJ
      QLGlUQJQbGmUABRbGiUAxZZGCUCxpVECUGxplAAUWxolAMWWRglAsaVRAlBsaZQAFFuanD3C
      JkaukTYq8FgRMu5SyhyS/vEQPR0t+a2hQrGO5OwP4Pd7uDaewBYpIrEJUjokElmPMCkllmXl
      s54KxbqQmwCEwON2A0kQGgYWyTkeYTe9wpRHmKLQyTlI3rX+YVJJQW1jPTVujXBaw5Bve4Td
      FIJCUcgojzDFlkb1URRbGiUAxZZGCUCxpVECUGxplAAUWxolAMWWRglAsaVRAlBsaZQAFFsa
      JQDFliZHa1DJyGA/Semk3KVhukooddgMTkXoaG7Ibw0VinUkN2M4WxKOp/FoScbjBqYeJ2lI
      QtEkKAEoiogcu0By1tpTCh0dm4QFbkP1qBTFRU4tgNA0/C6dhPRQX+HD4YBgSsOQ6XzXT6FY
      V2bNoVM34nvlg0QigcvlUg4xioJntgXQNC1vDiw3vcHm+gPcdDu4tQzbthcIZbE00zTRdX3e
      +Ss9dzXHWpa14F4sdtxi17OaazRNE8Mwlj0uH/dtJeVs1H2zbXuBs9R63Lel7qWUcl560TjE
      LHbj1oOlfox8s9QDtx7lqPu2NDk7xW80G9Wd2ig3zo26HnXflskvr7nlAdvKcPrYURKW5Oql
      85w+c460lX27nD5xnIydnwbLMlNcOHuW3iv9jFy/yulTp4ils2Og86eOkzDzU04qFuLs2bP0
      D43Se/4sZ85dxJYSaZscP3EqL2XcZGTwGqdPnSSasgmO9XN1eBozPs2xM5fzW85A9n6FExkS
      M8NcuDaGlYpy9OT5/BQgbQZ6TzE8k2BydIgzp08zE0kQC07Qe2UQaSV561h+7l0BtgCCgM9N
      xoZYLE7alGQsiZaawhYOJmaiTA9eJGU7qC/3MpHQ2L29c9VK1nQH7e0tXOofpSummtEAAAQY
      SURBVLSyktHxSUxbYqUiSN3J2NgkiZkhUhlJbUUpQxGLfTu70Vf5pnN4Smiur2Y8GCceT5BG
      R0qIB8fRpWQybjJ47giWo4Qqn05SeOjpbCWX92mgtJTRsQlMW5IxTYKhabQEOITJ8MAV+sfD
      1FeWUlnmJ46X2nJ/DqVALB7DzqRIpE1EOsFMWDKhx5G2xfhwP32DkzRUl1NRVUEoZtFUV7nq
      MmorS7maMOkoL2VodAzTtCGTIRwKMj6UwjYMJkauc3VghIrqahpqy5kM27TUV6yqnIJrATTd
      wNCz1TKFQU2Zl0TKZKB/GHTJyNAQ3pJyyv0u0hZ0dXfkdBFWJsmlqyPs3NaNcLhprPITjCQZ
      Hx4inrEYHxvF5S2htqKERCJDZ8/qH36AeGiCsYhJR3MNwl1CqUsnY0sGB0fRnILha/2UVlTj
      dQik7qCroyWnhx8Aw01zTQkz4QQg8DsgZGo4BExOTxOZmKCiws/p3iEqAr5cSyGWMuloqSUc
      yZZT7tYZCpv4XQYTU9MkQzP4ywOcPnWByqrVPZAACA2HI/tuNqVOe1Mt08EQAJUlLq5Npyh1
      CiYnp8jEJimpqOLY8QtUVQZWXVTBtQDpRJRgyiY5MkJrQy3BpE2l34GrqZ12fwnRaITLF85Q
      09JDZYkbQ8/xcZESgcnV68MEXJKQ5aWzykvM3chdbdlyrl46j1HXSlONH2HkWI7QycSmGJ1x
      0VDhIynLcemCxvZuSkpKiEQiXDhzgpaeOynxGGi5P/4kokFm0m46m3xkkrUEqnXiCQtds0lG
      QwQqGzEMN4GAH4eWezndHa0MjgXp6CiHjIv2SiexcAKHQ5BJRvEFavA4nZSUl+PJ4b7Zlknf
      cAhbS5FylTA+naCjswNppvEFqihLJDF0gZmK4QtU4HPoBMoDeJyrn3QpmlmguSw2FabKWRnp
      VAJhuHDo69v4m+kUtjBwOtZ/a5y1lFWUAlAo8kXBjQEUio1ECUBRBEhmpiaYCUVYrrsipWR6
      ajr77+Q4E1MzJOJxEvEY1k1LH2kTTySBAhwEKxQLsXjh+z+krbmK0tY9EB6mvKENMiYu3cZf
      VU9yZoTrkzFKMiM887Pr/IdPf4Qf/OBFHn70cV565afUNJTTtes+BnrPUlNbxss/eYu9Bw4o
      ASiKA48/wN5d2/jXE334tSRHz16lwudAd7l47xP1/ODVn9NTH2BU6tx1zyEMXZCMR5gOhgGI
      haY59sqPaTmwnzdePozu8tN79qTqAimKAYGZCPOzo+fZ2VVHMGpSWVHGttYAGWcNGlBT7qN/
      Kk59VTlelwMQtHRtZ/f2Lnz+ErxeP7WN9Vw5dxYTjarKCkpK/GoWSFG8nD76cxrv2EeF37Wi
      4yPTY5w5d4Gqlh10t1QDahpUscX5//FFb7iwrf3UAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Cabin_Class_Distribution' width='192'>
      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
      GiUARVvz/wGH9vOWC9RFzwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Fare_Distribution_by_Airline' width='192'>
      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
      a/cAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Fares_by_Start_and_Destination' width='192'>
      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
      B6pN0wQiQnDbAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Flight Trends and Pricing Analysis' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Flight_Price_Trend' width='192'>
      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
      AQEIMrwfpP0ZAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='NonStop_vs_Connecting_Flights' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Refundable_vs_NonRefundable_Fares' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Route Analysis and Flight Characteristics' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total_Fares_vs_Travel_Duration' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Travel Distance and Airport Analysis' width='192'>
      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
      rGhenDt9ikgkgtPpZNtDO1bchuVfBYrCms416A1XZ4TJioBGKDIXXKDG48JTU4+nykNVfTuN
      7aupst5b8z3vNnJ6ASVz4/7BvlgeX+zqismF7p+gbn0cqffniIJIrb0eUVi8NW8OvMpWeydv
      Th+EzVtg+GojWWeOk5oSKAUD6Fuqriqo3gyO5sWHX6UFlwthYhzGx8HlunMX/AmIRCJ84eln
      iEQid0X/sk+soigsxFJs37L2ym8qrZHVq5d4e1weri8//leRQoOUJg6jyApi22OoKjsBrnvw
      fbE89fbFgcZsKc2Hy0xFgYWQniFVCVKpxYaudTF4rJCLoNLrMa8xQqaEqq7l+pMN13QtutxI
      Wh1qtQqueaEVpBLpfOGWlim5UzidTva//RZO593pCl32mc2UVKxqrCSVvre72u5VpNAgmtVP
      I0kSUqAXVWUnlyZDHO/3owDP7OpEEASKcoHjVRVsGTvIbPNm1l2TxtkhP2tDk5SKWcxTTuRH
      K8jrC4wf+2tSsUncNQ9QUbke26rfXHzTfxQGw2IP0WUKUomj46O4TWZ8scgtL1h1u7m22nM3
      WLYK9O47bxIMBplfiK6kPZ95JsPjHB49iLDqKYqj+5DGDqDp/DIAvaMB/uzLm6lzW+k5f5Hc
      7CinJw9TMti4UFNHRH21z1mRFQrzMYSECm3bF8g4DORR4xt8CZu7E0flemyV60mmQzd/+Jcg
      nS/gNpkXlyzJ3r8vuWVLgB17nqCpqWW5w2WWIJ6N0TNzjp3ND/PW8Dt8bfufUiqVEC6vhbOp
      vYqf7bvASCiApxoSaQUHMSLzRYKM8pX6ZwCQizEme39Iu0bDaaxET7/OFzbVMVpU47Q2IJWy
      zM+cQFRpad38P30iWx1GI75YhGMTo2yurb9tefBxKckyZ6YnAdje2Ix6hcMilnWAdDxKd3c3
      ar2ZjWs/utfg88p8LM2+M+NUu8zs3frpXwbrmitZ11zJT89k2WWxcC4YQK2tI6ke4ZH6Rzg+
      GKCjdi1HRveRmDESrxHZ0SiTeeAP0Dr1EM1Tt/qrZBI+qlqfQae3fCp7PlztyQ0MkrtwAUUU
      sX/zGysSo9MfmKXDU3Xl+8bbVBWLRaOcOXUSl9vN1u0PLiu37BU6nG4Meu0td2d+Htl3Zpzf
      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
    </thumbnail>
    <thumbnail height='192' name='Travel_Distance_by_Start_Airport' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAY2ElEQVR4nO2dSWwkWXrffxGRkftCMhdmcmdVdVV1V1W3ZwTYg9HIliAPYFiATtZdNiD4
      YPhkQAYMC5iDDz75JsAHA4YPxgi6WbZmYAnSyBpbYwu9VHfXwn3NZC4kc2GukbH5QFZNV7N6
      piOSkczofL9DFbd/vC/I+OJ9733ve0+ybdtGIJhS5Ns2QCC4TYQDCKYa4QCCqUY4gGCqEQ4g
      mGqEAwimGk8dwLKsb6zOsizczCD74d7c6kb5nYzrd2nb9hu6gOMrOMCyLDpDzbHONE0URZlo
      nR9sHLfOtCxkSUKSJIdtWciyjEOZKxtt28a2bWT58t3vqQP0dZ0//Ju/8rIJgWAkxBhAMNWM
      5AAnxSImABYff/gRpqlzVDyhWjpGM9zFngLBOBnJATrtzuX/1WMCkTitvoU8aFJuDwkGROci
      mHxuZAxwWDlDUQKUiiVUy0axNVejeoFg3IzkALncLNub2yzdeUAyEad70YJACBUD3RQOIJh8
      RnKAmfQ8M+n515/Hk6k3vj/UR7m6QOA9nk6DKrLMvUzOsc62bcdzyePW+cHGsetsGyS4+sfb
      tlzrbLDhVdJB8rIgxm0SxjAMAgHnvjlOnWEYKIri+A/gh3tzqzNN8yqh5TQR5k7nxsZXWedX
      z6WYqhFMNd72AEMde6/qWOeH7t4PNo5b5wcbr4SvQyBPxwC2ZWFXGu60btsco84PNo5b5wcb
      v8hIDtBu1hlYMvGgzFmjRTa/QLd5RjCaIhELj2iaQOA9I4wBdDa3D8C2ODg+JjUzQ7t2SKNv
      s7u9gWGJPIBg8hnBAQIsFeY4PCxiGBrF4xKNZo98YZ5kLILuch26QDBORgiBTFqtLmogQCyZ
      ZH1llWGvxcvnn6MEw4QVBdMwbs5SgcADPJ0FMgYa9v/d8uryAsHIiDyAYKrxNg9gGMh95wuC
      fFH+Z5rIiuIw6e+Pe3Orc18S6T6DPNElkUgSUiLiXGcYSC7S92PVGQaSi6UQvrg3lzrJNJFc
      PMhudW5stC0LbBvpynG8dQDLwmg2HctM0wSXb61x6fxg47h1lmVhSc6L2y3LwpadR+NftFEK
      BlESCcfX8NQBzE6Hyr/4l142IRAAEP7W3yH3r3/fsU4MggVTzUgOcFwsAjbH+zu8ePGCi96Q
      8vEexer5DZknEHjLSA7Q7nSwjSHtoUQqFsS2bdo9nV6rPvIiJYFgHIweAskKWr9LOhnlpFKh
      dlanUj1FN8VSCMHkM9IgOBEOcHRyxnvvrHFQqrGyVODOyhKyqWHZTgvjBILxM5IDLK/de/3x
      g/vJn39DjQIwHOXiAsEY8HQaVAoEiHz7W451lm0ju6j0GafOuqpGctqaH+7Nrc62Acl5z29f
      VWiN8rsM3r3rUH2JKIp3qRNF8dcRRfECgc/wdimErsPP/o9jmfyFouVJ1fnBxnHrJJdt/VLd
      d78HLpZKfB28dQDTgK1NxzK3tzpOnR9sHLfOs7a+813PHECEQIKpZqSi+J/8xV9jWSY//p9/
      Rr10xFlnwP7Wc3YOSzdnoUDgISOEQDYzsSAn5RMCkRSWaWHbFgNDBrON2B1d4AdG3B06x+72
      AYV8FoBBu067r4Gu0dNNxM5AgklnBAdQWb27xsqd1dcJIRtYLCwi2Ta2JGGL7dEFE84IDiAh
      y9KXvvLqg0uHMN1fXCAYC95mgnUdpeWuJHLiC8BFUfx1jVfnBKczb80T3EQm2Ns8gCxDJutY
      ZhsGuEjfj1NnG8ZlParT9TI+uDfXOtO8/Js7P/Hane4GEHkAwVTjaQ+gGRZ/9tLF9uhXqwon
      WucHG29D54CwKvOPHsx528gvwdvzAWxoDcRQWPB2JuEkUdcO0L9osHdcZi5XIBWGw2KV5bU7
      9JpVGl2Td+6u3qSdAoEnuHaAduuCbKFAuXjCuWTy8N132djcQuv1eOfdR6IcUuALRhgEW9TP
      6wRUFUlWUJQAEhJPHr/H9vPn9EVRvMAHuHaAaDyOoQ2IxOIs5OZ4/vw5+eUVisfHhFMzhBUx
      wSSYfFyHQPHZLI9nfz7HP5stAJBOPhzdKoFgTHi8OzTIYjAg+Aom4dkQRfEudaIo/jqiKF4g
      8Bkenw9gwPlLxzLJtMDFIHqcOsmyXNWp+uHe3OokywJJvswgz955vUHaJOOtAxgaPP9jxzLn
      QdP4dX6wcdy6N9zl278Hqcl3ABECCaYa1z3Ay08/wVACpOYKtKr7KJEU6ahFuR8jFeizvH5f
      ZIMFE4/rHkBRI7z3+An9Th3TMkGSkWQVxezTHohaSIE/cO0AutZjb2cLNZxAUQKEg0HAZml1
      ldLR0Q2aKBB4h+sQ6MGTJ5imTTCoYuTnMK3LjyVJ4fvf/z6KBGI1kGDSce0AgYD6umJODYZQ
      3/iet5NLAsFN4e2TqgThzj90LLMs6/VJ3pOqsyzr8nDnMbTlF51lWZdb5EgShFOO27wNPHYA
      FVb/vmOZZRjILnqRceqsq6UQTgu5/XBvbnX21Ynvt1Hc7haRBxBMNZ72AB2tw7/783/rZROC
      CeT3f/MPyMZzt23G18JTB7Bsk1Lr2MsmBBOIYRm3bcLXxpUD9Fpn7JVOWVxexew1qJ23mMvM
      k00nqdTqzMXCyNHETdsqENw4rhygc3ZK4e59TrY3QJZYX1ujUStzZg85Kp2izURYXk/+8gsJ
      BLeM60GwJCmogQCWOaRWqzE7l2R774SlTJwLHQKKf2YCBNOLqx4gkkyxt/2C+fkFJGvIfC4H
      tk0u3WRhIYtW6oiFcAJf4MoBEtkFPsguvPlFSeL+/XcAuLcu4n+BP/B4zYKEIrstyRD4Fedn
      vt8eoijepU4UxV9HFMULBD7D0xDIMAxefP65Y51lmcguQqdx6vxg4zh06UyGhaUlx9efFLw9
      H2Aw4If/5T972YTglvnO936N3176J7dthmtECCSYalw7QL1a5NPPPufT55tgm/yvv/wJumlz
      dHTI3tYGA0PUgwkmH9cOcF5v8+jxYyKyTb18xMLqKpV6m9PyAT07RDggOhfB5ON6DJCMh9ja
      2qY/NDDPB8jBCPXqCbO5JYx+h+7QPysCBdOLaweYX1pnZqgRCFzuBqEoCqZpXp0ab2Mj07lB
      QwUCL3A/CyRJhELhN770xaSXf3KBgmnG02lQNRjk+//4txzr/FIAPuk2jkO3uLzs+NqThFgK
      4VInlkJcx49LIbxdDGdbWN26c5lhYgWcO844dbZpYisKTt8efri3azpJQY7e7oHWXuHtQdn9
      Jr3/9BteNiEYA1Jqmfg/+/Ftm+EJYrJeMNWM1APYtsn25gZyOEVYhaVCnp3tDc4afZ5861uE
      bspKgcAjRuoB+s1Tgsk899aWaLfbIAdYv7NGOpMnFhL7gwomn5EcQA2F6bQvGGrDm7JHIBgr
      ozlANMXiXITqeZN0Ks7W7iGSEmahkLkp+wQCTxkxTpGYzeaZvfrs1WZ4sZgIfwT+wPPdoZW1
      7zmW2bbtOCkybp0fbLwpnRzzxz6fbhCZYJc6kQm+jh8zwSIPIJhqvN0dWtOp/OinjnW2ZSPJ
      LrrtMer8YKNbXfpXnxDI+uOEl1Hx1gF0g8bPXnjZhMADko/WhQN8HVqNcwaGRGYmhiUHsYwh
      sgSyGkLsjSvwAyONAY6PjzH7dbaePaXWhaO9fWrHe1yIc7IFPmEkB9B6HeoXfVKJKHvbLylV
      zm7KLoFgLIwUAqXzS6ytrdE9PeBBYRXt9BBVMdjffEHw/n2vd94VCEZmpGd0bW0NgFh2jRhA
      7PLz3FWVnDYY5eoCgfeIPIBgqvE0E2wMdYZl5yWRbjPI49SZlunq7AM/3FsoN4OtKlORCfY0
      TJcUmejqvGOdH9L+07AUYhrw+Jxgm4t237HOD29JP9joVJeMhVBcbKHiZzx1gHZvyD/993/i
      ZROCG+Q//qvfopCervPdpsvdBYIvMbIDvPz0Y3qGyc7zT/ibv31K+eiAznSEj4JvACOFQKbW
      gWCYavmMe+srDE8tZP0MXRwNIPAJI/UAp+USXc2gVqs63iFNIJgERuoB4plFfmU1TrfbgVCQ
      5ZyNaqrs7bwgePf+TdkoEHjGaA4Qj7/xfyICEOK992YA0MR2KYIJx9Np0IAi8+138o51figc
      94ONTnUhdfqWL4qieJe6acgET8NSCJEHEEw1np8Uv/XsM8e6ST0N5bpGwulhUJN6bzNzaQrL
      K46v73e8XQtkmhQP9rxsQnBD2LY1lQ4gQiDBVOOuB7BttjeeoekWyewSp8cbyEqEpeUC27vH
      xBIJnjx6eMOmCgQ3j8sewEInyOP336fbqmEYOoqiYGOzuHqHuYjKwBDrIQSTj8sxgIyt99jZ
      3iQQTpGas5FMA9MwqJ6cEgoFWFBkhmJ7FMGE484BJIl3H7+PpumEwyEsax5ZljBNi9RMhmAo
      jOJiGz+BYNy4ngWSZYVI5DKZ8Lq+MiC7SroIBLeFt0Xxuk6nfeFYZ5kWsuJiznuMOtfz8hN6
      b8FQmGgs9vrzackEe1sUL8vMzKUd6/yQ9v+mL4WYFkQeQDDVeFsUr2n8mz91UxRv43SJwfh1
      frDxuu6DhUX++a/+movrfDPxdimEZXFQP/eyCYFD8onkbZswUYzsAKbep90zKB/tE0/nSSXC
      yJaJGpuOAxYE/mbkMYAxbFOpnWPaQfLZOarlEgfFMkFxQobAB4zsAK+mlJr1U+qtNt12E4sA
      7uJVgWC8jBQCDQcddvZPufvwPslYhPnMLAHpHRTboKuJzYEEk89IDhAMx3n85DEAkfkMAOl0
      5vX3651Rri4QeI/nGRLJh1OFk9fWzelc1NV/oxFF8S513/RM8LQshRCZYMFU42kIZNoGe61N
      x7pJLRy/rbZG1cWDCRZjq46104CnDqCZGn9y+EdeNiH4GqzE7/A7d373ts2YSEQIJJhqXPUA
      BxsvuDBtorEk8qDFQbVBPptlbXWRz17usZpLkixM3xYbAv/hqgcwbZmHjx5hDnus3bnL4tIy
      C3MxjkplwuEIbU0nEhCdi2DycfWU2pbO0cE+thR8/bWZbIbjoyrvFCKcXpjIYsJZ4ANchUDr
      Dx4yGOpEIhEk4N7aMigKv/4PvkMgoPB3k2JLFIE/cOUASkAlFlB//vlVUkFV1av/Rfgj8Aee
      ToOqssp353/Dsc6y7KuNZydX5wcbX+lmw3OOddOCWArhUieWQlxHLIUQCHyGpyGQrl3wsx/9
      nmOdH9ZZ+sHGSGKBD37zP7hobXrw1AFsy6Bd3/KyCcEvwDQGt23CxOPKAVr1GqXKGelMllg8
      Sbt5Tr6Qp9VoUKlWiCYzLC/M37StAsGN48oBzpod7t69i8KQvWKV4dkBdkCh3x1gBZMMOnVM
      O3fTtgoEN467QbAxpFgs0jNUjN4ZqaV7HG1ukU2nKB9sUu9YKCITLPABrnqAZDLOaf0C3TBI
      JeIkM3kGnTbxaIRHH/wKktZBM8ybtlUguHFcOUA2v0T21fnXqfsAJB48ACCfCQGzAPS1ke0T
      CDxlDNsGi1DotnBzsvy0ITLBLnUiE3wdkQkWCHyGt4kw20Bvujkp3sSWnfcc49SNo61A4gGS
      EnXchuDr4+0YwOzT3/9DT5v4JhN78AcoUbGbg5eIEEgw1YzWA2httms9Mkqf/ZbBe0szfPxs
      j3gyyeP3HtyQiQKBd4wYAlnohslpXyOpgG5enhQv95sMDIvgL7+AQHCrjDwGsM0hjfM6IVVG
      UoPU622CQYUFRcYWpcGCCWc0BwgmeLAeR1pfQZbBNC3yOY1QOIIiS4gTAgSTzmgOIMkEvjCj
      J06KF/gNb59WOUgo/9uOZX7YeNayLCRZdrzQw0lbkjrj8OoCp3i+FMLNehS3SyjGqfODjePW
      WZaFJEljWwrhxkbbtrFt+/VLaCLjFbeLuMap84ON49a5efhH1Y2q8dQBJElyFZIAvtC5/cP5
      4d7c6F4FE+N0Ajc2frEtT0MggWDSUX7wgx/8wMsGTstFdvePiEbDbO8fkkvP8uGHH5FfXHg9
      gOw0z9g6OCE7G+PZ58/RLIXy/jax9DzV/Zd0iZCIXE+rnZaL7B8cokbC7GxsMrQDnOxvkcjM
      c7L7jL6SJB5Wr+n2tl5SqtRRZYOt7V2i8RgvNvbI5zI8/fhDMvOLKG95sZxVDqjWdTr1E47K
      5wSlIeWzLsmwzdPnuxTy2WsaY9jh06fPIRCiUT3muFJHsQecNgbEgiafvdynMJ+5pus0z9je
      PSAaj7Oz8ZLO0OasuEdoJkO9tEd9AKl45JquWjriYH8HzQ5SPNihr0P1cJdIep6zo21aukIy
      Fv6SymZn4wXFSp1I0GZjc5dQNMrGxjaFfI7PP/lbkplF1C+F28agw4uNTXpD6DZrHBarRIIW
      B6UG6aTKh083WCy8uTmCPujy6bMN8vM5djdfcNrqIxs9tncPiMRibG7tkMum+fjDj5hfXHi9
      Vqd1XuGgdMZcKspnTz9lNpentL/NSa2BorfR5QCt2iGnHZmZxOXvxTKGfP70U1K5POXDXQ5L
      ZcKqzNbWNko0ydaLZ96vBWp0+jy6O89x6ZxWs0nrvEzHUPhitxOKJZExaJWK5O8/Rus0UIIK
      5ZMqrWaDgTZ867XT8wskY0HODg4pPHzCoF1HDkClfEqrUUcb6m/VJZMJhppGtX7B+08eUi0e
      0b+44KJdp94eYL2lTzT1PuedLlqny0CXKUQkKl2dzkWTykkV6SuCSXPQY4iMYepohkIuZFPt
      mXQuGlTLNST57dnC3d09JEzOT0rMLt/D6F8gh1QqpTLN1gXDQe+tuvnFFWLROGGzS3rtAcNe
      i0BYpXx8QrPVZDh4+1YpvV4XrdflpNbkyZN3OSuX0Dst6hdNGq0exlvMbJ2dMlNYoXF6Qm9g
      sTIXpdLs0Gq2qJ6UIXA9pJGUIJGQCloLK5JFsoact7o8ur/MSfmMi8Y5ndYpFwP7jWckmpgB
      Q8NGJhkLY5gGGkFmYjKttsZx0+Ki3aLf+0IZonT1szYsrqyhYnFcOefR+0+oV08w+y3vHcDU
      dTrdHmowwML8DE+3quRn3nxzqerl2z0YUelctNENCyUYQ6sfEkxcfzu+onS4S3RukcJ8km7r
      UqeGk/RP9wilvmpXCotoMk1EGaINDbqdCwiEyczn+PTpJssL6beqLurnDLUhJ7UzhrpGR9MJ
      KpAKK9R6FpGvmowIRPngybs0TqvoVzpVhkRY4bxvE/4KXTgcYe3OHZrNM3qdDrpuIslhzE6N
      QPSrp0dNvY8uhYhHVbrtK50SwWiXCca+ao9QA0uOkY4raLpBp9vBllXSC4u8+OQzCoW3/w1m
      C0uYrRq6raDrQ7p9DVWRySRUjhpDEsHrj1dAVZElQFHRB110fYhl6HQ6PZRAgOWlDB99fsj8
      XOINnRq87MmVQOBywwVJQtc0BgMNRZEZ1PdRgm9qZCVA4Go/1Z2tTVbeeUg8AJ1uBxOF2WzO
      +zGAPuhyXKmzsjiPbtn0uz2CaoBYIvE6BDotF6nVWxSW1+g1qqRyS8iWgTHUiEQjGLZMNHw9
      BCofH9Bo91leu0OzVmI2v4xk6ujDAbFYBN0OEA19OQSyKR7sYQXjLGZT7B9VWF9bZDC00Ppd
      QkGVSCzB2/ehNWi3dSSzR7NvkZmNI0syPW2IIkEikbimsEyd/b09covroLW40CTmUlECskxX
      M1Ek660609DY3y+yemeds5MjorPzBCQb2xwSCEUwTYtY9HoIpA96mHKIsCpzcnxIPJ1HwcIy
      NILhKIZlE4tcD4HOqyd0DIXl/Bz7B0VW11bQNANt0CMSUlEjCb585olt6uztHVBYWYNhh9ML
      jUJ2BhuFXq9HQJGv3Vunec5hqcJMJk8YDUuNMxsLcHRyysryIrph0O/1CKoq0UTi9Ru6Ujzg
      vNUlm8txVqsRTaWZiyp0dJl0MsxgoBGOxxkOLRJXIZ7Wu2B3/5hIYhaGbfqmzN31FUrHRZbX
      76D3e2IQLJhuRD2AYKoRDiCYaoQDCMZOu9WgUqnQ7va/8md6vR7YNudnNSqVCpr+izdas02d
      vqZjmQa1aoVuX2M46KObv3hNvud5AIHgy/S6bf7bf/8fPHz4kOPdTUxF5Y9/+F+ZzS1Q2t9E
      lyP89Cd/ycOHD2kVn/On/2+flUyMarVOv9/koFgDY0g4qlKtNTjc3Sasn/NXmy1W4ho//ukn
      HGy+JCBp9OQYh1svsewuf/TDH7GyWuDF85ekUgn29vYmcy2Q4JvNbDpHOp1Gr+1SM5I8/+lf
      k0pnWM4l+d9bz/nw2Z+TigZBkijk86SzQU42PqIRu0dGbfPJx5/w8MEDnj3TabR76LJCUE7z
      akfCuWyB3PCYo+oFCX2f4nGF/GqObHYBu9fk4vSAvzipYUYzIgQS3A6JeIJEtkDrZIdUukA2
      EWJnb5f6xZD03AyJRPzyB2WVRDRMOJ7i3Yf3OK1USGezrD/6gI2dI3797z0mooZIxmeIR0JI
      isppaY8TI8ndbIx4ao5cSuao1AGjwf5BkUBylkQ0Qno2JaZBBdON6AEEU83/BwZtn0Xgyspg
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
